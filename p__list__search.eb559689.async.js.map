{"version":3,"sources":["webpack://ant-design-pro/./src/pages/list/search/index.tsx","webpack://ant-design-pro/./src/pages/list/search/service.ts"],"names":["Search","props","path","location","pathname","replace","tabKey","includes","useState","templateData","setTemplateData","activeKey","setActiveKey","getTemplateData","list","current","pageSize","data","value","split","length","history","useEffect","handleTabChange","key","match","url","handleFormSubmit","console","log","textAlign","maxWidth","width","map","item","tab","name","children","type","request","method","params","options"],"mappings":"6OAiBMA,EAA0B,SAACC,EAAU,CACzC,GAAMC,GAAeC,SAASC,SAASC,QAAQ,gBAAiB,IAC5DC,EAAiB,GACjBJ,EAAKK,SAAS,aAChBD,GAAS,YAEPJ,EAAKK,SAAS,aAChBD,GAAS,YAEPJ,EAAKK,SAAS,iBAChBD,GAAS,gBAEX,MAAwCE,eAAc,IAAtD,eAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,eAAiB,IAAnD,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAe,wCAAG,4GACCC,SAAK,SAAU,CAAEC,QAAS,EAAGC,SAAU,SADxC,YACdC,EADc,EACdA,KACAC,EAAUD,EAAK,GAAfC,MACRR,EAAgBO,GACXN,GACH,CAAIT,EAAKK,SAASD,EAAS,KACzBM,EAAaN,EAAS,IAAMJ,EAAKiB,MAAM,KAAKjB,EAAKiB,MAAM,KAAKC,OAAS,IAErEC,WAAA,UAAgBnB,EAAhB,YAAwBgB,IACxBN,EAAaN,EAAS,IAAMY,SATV,qCAAH,qDAarBI,gBAAU,UAAM,CACdT,KACC,IACH,GAAMU,GAAkB,SAACC,EAAgB,CACvC,GAAQC,GAAUxB,EAAVwB,MACFC,EAAMD,EAAMC,MAAQ,IAAM,GAAKD,EAAMC,IAC3CL,UAAA,UAAgBK,EAAhB,YAAuBF,IACvBZ,EAAaY,IAGTG,EAAmB,SAACT,EAAkB,CAC1CU,QAAQC,IAAIX,IAGd,MACE,UAAC,KAAD,CACE,QACE,iBAAK,MAAO,CAAEY,UAAW,UAAzB,SACE,sBACE,YAAY,qBACZ,YAAY,eACZ,KAAK,QACL,SAAUH,EACV,MAAO,CAAEI,SAAU,IAAKC,MAAO,YAIrC,QAASvB,EAAawB,IAAI,SAACC,EAAD,OAAgB,CACxCV,IAAKlB,EAAS,IAAM4B,EAAKhB,MACzBiB,IAAKD,EAAKE,QAEZ,aAAczB,EACd,YAAaY,EAjBf,SAmBGtB,EAAMoC,YAKb,UAAerC,G,mHC/ER,WAAP,oC,mEAAO,WAA2BwB,EAAac,EAAxC,4GACEC,QAIJ,sBAAwBf,EAAK,CAC9BgB,OAAQ,MACRC,OAAQ,CACN1B,QAAS,IACTC,SAAU,KACVsB,KAAMA,UAVL,qC,wBAcA,WAAP,sC,6CAAO,WACLZ,EACAe,EAIAC,EANK,+FAQEH,SAIJ,aAAeb,EAAK,CACrBc,OAAQ,MACRC,OAAQ,mBACHA,GACCC,GAAW,WAhBd,qC,wBAqBA,WAAP,kC,mEAAO,WAA0BA,EAA1B,4GACEH,QAAuB,OAASpC,SAASC,SAASC,QAAQ,gBAAiB,IAAK,CACrFmC,OAAQ,MACRvB,KAAM,cAAF,GAAQyB,GAAW,WAHpB,qC,wBAOA,WAAP,kC,mEAAO,WAAuBA,EAAvB,4GACEH,QAAuB,OAASpC,SAASC,SAASC,QAAQ,gBAAiB,IAAK,CACrFmC,OAAQ,OACRvB,KAAM,cAAF,GAAQyB,GAAW,WAHpB,qC,wBAOA,WAAP,kC,mEAAO,WAA0BA,EAA1B,4GACEH,QAA6B,OAASpC,SAASC,SAASC,QAAQ,gBAAiB,IAAK,CAC3FmC,OAAQ,SACRvB,KAAM,cAAF,GAAQyB,GAAW,WAHpB,qC,wBAOA,WAAP,kC,mEAAO,WAA0BA,EAA1B,4GACEH,QACL,OAASpC,SAASC,SAASC,QAAQ,gBAAiB,IAAM,UAC1D,CACEmC,OAAQ,OACRvB,KAAMyB,SALL,qC","file":"p__list__search.eb559689.async.js","sourcesContent":["import { PageContainer } from '@ant-design/pro-layout';\nimport { Input } from 'antd';\nimport type { FC } from 'react';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { history } from 'umi';\nimport { list, addList, updateList, removeList, exportList, getTemplate } from './service';\n\ntype SearchProps = {\n  match: {\n    url: string;\n    path: string;\n  };\n  location: {\n    pathname: string;\n  };\n};\n\nconst Search: FC<SearchProps> = (props) => {\n  const path: string = location.pathname.replace('/antdpro-demo', '');\n  let tabKey: string = '';\n  if (path.includes('articles')) {\n    tabKey = 'articles';\n  }\n  if (path.includes('projects')) {\n    tabKey = 'projects';\n  }\n  if (path.includes('applications')) {\n    tabKey = 'applications';\n  }\n  const [templateData, setTemplateData] = useState<any>([]);\n  const [activeKey, setActiveKey] = useState<string>('');\n  const getTemplateData = async () => {\n    const { data } = await list('type/1', { current: 1, pageSize: 20 });\n    const { value } = data[0];\n    setTemplateData(data);\n    if (!activeKey) {\n      if (path.includes(tabKey + '/')) {\n        setActiveKey(tabKey + '/' + path.split('/')[path.split('/').length - 1]);\n      } else {\n        history.push(`${path}/${value}`);\n        setActiveKey(tabKey + '/' + value);\n      }\n    }\n  };\n  useEffect(() => {\n    getTemplateData();\n  }, []);\n  const handleTabChange = (key: string) => {\n    const { match } = props;\n    const url = match.url === '/' ? '' : match.url;\n    history.push(`${url}/${key}`);\n    setActiveKey(key);\n  };\n\n  const handleFormSubmit = (value: string) => {\n    console.log(value);\n  };\n\n  return (\n    <PageContainer\n      content={\n        <div style={{ textAlign: 'center' }}>\n          <Input.Search\n            placeholder=\"请输入\"\n            enterButton=\"搜索\"\n            size=\"large\"\n            onSearch={handleFormSubmit}\n            style={{ maxWidth: 522, width: '100%' }}\n          />\n        </div>\n      }\n      tabList={templateData.map((item: any) => ({\n        key: tabKey + '/' + item.value,\n        tab: item.name,\n      }))}\n      tabActiveKey={activeKey}\n      onTabChange={handleTabChange}\n    >\n      {props.children}\n    </PageContainer>\n  );\n};\n\nexport default Search;\n","// @ts-ignore\n/* eslint-disable */\nimport { request } from 'umi';\nimport { TableListItem } from './data';\nexport async function getTemplate(key: string, type: string) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/template/' + key, {\n    method: 'GET',\n    params: {\n      current: '1',\n      pageSize: '20',\n      type: type,\n    },\n  });\n}\nexport async function list(\n  url: string,\n  params: {\n    current?: number;\n    pageSize?: number;\n  },\n  options?: { [key: string]: any },\n) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/' + url, {\n    method: 'GET',\n    params: {\n      ...params,\n      ...(options || {}),\n    },\n  });\n}\n\nexport async function updateList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'PUT',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function addList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'POST',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function removeList(options?: { [key: string]: any }) {\n  return request<Record<string, any>>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'DELETE',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function exportList(options?: { [key: string]: any }) {\n  return request<TableListItem>(\n    '/api' + location.pathname.replace('/antdpro-demo', '') + '/export',\n    {\n      method: 'POST',\n      data: options,\n    },\n  );\n}\n"],"sourceRoot":""}