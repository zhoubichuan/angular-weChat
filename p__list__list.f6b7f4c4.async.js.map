{"version":3,"sources":["webpack://ant-design-pro/./src/pages/list/list/index.less","webpack://ant-design-pro/./src/pages/list/list/service.ts","webpack://ant-design-pro/./src/pages/list/list/SliderPart.tsx","webpack://ant-design-pro/./src/pages/list/list/UpdatePart.tsx","webpack://ant-design-pro/./src/pages/list/list/CreatePart.tsx","webpack://ant-design-pro/./src/pages/list/list/index.tsx","webpack://ant-design-pro//home/runner/work/antdpro-demo/antdpro-demo/src/pages/list|sync|/^\\.\\/.*\\.json$/"],"names":["key","type","request","method","params","options","location","pathname","replace","split","length","data","responseType","SliderPart","props","template","onClose","descriptions","filter","item","JSON","stringify","view","map","width","ellipsis","rest","render","text","Array","isArray","i","whiteSpace","moment","fromNow","id","UpdatePart","onVisibleChange","onFinish","handleEdit","fields","hide","updateList","formItemLayout","labelCol","xs","span","sm","wrapperCol","value","images","success","edit","form","title","dataIndex","CreatePart","handleAdd","addList","create","TableList","XLSX","require","handleExport","importList","uploadprops","accept","name","headers","authorization","showUploadList","beforeUpload","file","fileList","rABS","f","reader","FileReader","onload","e","dataResult","target","result","Uint8Array","workbook","read","firstWorksheet","Sheets","SheetNames","jsonArr","utils","sheet_to_json","header","readAsBinaryString","readAsArrayBuffer","handleDelete","selectedRows","removeList","row","path","useState","createManyModalVisible","handleManyModalVisible","createModalVisible","handleModalVisible","updateModalVisible","handleUpdateModalVisible","actionRef","useRef","currentRow","setCurrentRow","tabActiveKey","setTabActiveKey","selectedRowsState","setSelectedRows","useParams","tabs","setTabs","templateData","setTemplateData","setOptions","showDetail","setShowDetail","getTemplateData","includes","getTemplate","Object","keys","forEach","field","parse","requestTabs","tabsData","href","arr","requestList","current","pageSize","handleOnSearch","useEffect","handleOnTabChange","reload","history","slice","columns","fixed","align","hideInSearch","hideInDescriptions","dom","entity","search","hideInTable","table","defaultSortOrder","sorter","a","b","renderFormItem","Set","o","label","find","valueType","_","record","copyParams","obj","content","okText","cancelText","onOk","classNames","styles","ghost","reverse","tab","x","y","labelWidth","optionRender","searchConfig","formProps","exportList","res","blob","Blob","downloadElement","document","createElement","window","URL","createObjectURL","download","decodeURI","body","appendChild","click","removeChild","revokeObjectURL","onChange","density","fullScreen","setting","showQuickJumper","pageSizeOptions","defaultPageSize","undefined"],"mappings":"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","file":"p__list__list.f6b7f4c4.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table-part\":\"table-part___IbfjC\"};","import { request } from 'umi';\nimport { TableListItem } from './data';\nexport async function getTemplate(key: string, type: string) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/template/' + key, {\n    method: 'GET',\n    params: {\n      type: type,\n    },\n  });\n}\nexport async function requestList(\n  params: {\n    current?: number;\n    pageSize?: number;\n  },\n  options?: { [key: string]: any },\n) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'GET',\n    params: {\n      ...params,\n    },\n    ...(options || {}),\n  });\n}\nexport async function requestTabs(\n  params: {\n    current?: number;\n    pageSize?: number;\n  },\n  options?: {},\n) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/tab/' + location.pathname.split('/')[location.pathname.split('/').length - 1], {\n    method: 'GET',\n    params: {\n      ...params,\n    },\n    ...(options || {}),\n  });\n}\nexport async function updateList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'PUT',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function addList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'POST',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function removeList(options?: { [key: string]: any }) {\n  return request<Record<string, any>>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'DELETE',\n    data: { ...(options || {}) },\n  });\n}\nexport async function importList(options?: { [key: string]: any }) {\n  return request<TableListItem>(\n    '/api' + location.pathname.replace('/antdpro-demo', '') + '/import',\n    {\n      method: 'POST',\n      data: options,\n    },\n  );\n}\nexport async function exportList(options?: { [key: string]: any }) {\n  return request<TableListItem>(\n    '/api' + location.pathname.replace('/antdpro-demo', '') + '/export',\n    {\n      method: 'POST',\n      responseType: 'blob',\n      data: options,\n    },\n  );\n}\n","import type { ProDescriptionsItemProps } from '@ant-design/pro-descriptions';\nimport ProDescriptions from '@ant-design/pro-descriptions';\nimport { Drawer } from 'antd';\nimport React from 'react';\nimport { CloseOutlined } from '@ant-design/icons';\nimport type { ProColumns } from '@ant-design/pro-table';\nimport { Image } from 'antd';\nimport moment from 'moment';\nimport type { TableListItem } from './data';\nexport type SliderPartProps = {\n  onClose?: (e?: any) => void;\n  data: any;\n  template: any;\n};\nconst SliderPart: React.FC<SliderPartProps> = (props) => {\n  const { data, template = [], onClose } = props;\n  const descriptions: ProColumns<TableListItem>[] = template\n    .filter((item: any) => JSON.stringify(item.view) !== '{}')\n    .map((item: any) => {\n      const { width, view, ellipsis, ...rest } = item;\n      return {\n        ...rest,\n        render: (text: any) => {\n          if (item.view && item.view.type === 'image') {\n            if (Array.isArray(text)) {\n              return text.map((i: any) => <Image height={300} src={i} />);\n            } else {\n              return <Image height={300} src={text} />;\n            }\n          }\n          if (item.view && item.view.type === 'time') {\n            return <div style={{ whiteSpace: 'pre-line' }}>{moment(text).fromNow()}</div>;\n          }\n          return (\n            <div style={{ whiteSpace: 'pre-line' }}>\n              {typeof text === 'string' ? text : JSON.stringify(text)}\n            </div>\n          );\n        },\n      };\n    });\n\n  return (\n    <Drawer\n      title={data?.id}\n      destroyOnClose\n      closable={true}\n      closeIcon={<CloseOutlined />}\n      width={'80%'}\n      open={true}\n      onClose={onClose}\n    >\n      {data?.id && (\n        <ProDescriptions<TableListItem>\n          column={2}\n          request={async () => ({\n            data: data || {},\n          })}\n          params={{\n            id: data?.id,\n          }}\n          columns={descriptions as ProDescriptionsItemProps<TableListItem>[]}\n        />\n      )}\n    </Drawer>\n  );\n};\n\nexport default SliderPart;\n","import { message } from 'antd';\nimport React from 'react';\nimport {\n  ModalForm,\n  ProFormText,\n  ProFormTextArea,\n  ProFormSwitch,\n  ProFormSelect,\n  ProFormRadio,\n} from '@ant-design/pro-form';\nimport { updateList } from './service';\nimport type { TableListItem } from './data';\nexport type UpdatePartProps = {\n  onVisibleChange: (e?: any) => void;\n  onFinish: (e?: any) => void;\n  data: any;\n  template: any;\n};\nconst UpdatePart: React.FC<UpdatePartProps> = (props) => {\n  const { data, template = [], onVisibleChange, onFinish } = props;\n  const handleEdit = async (fields: TableListItem) => {\n    const hide = message.loading('正在配置');\n    try {\n      await updateList({ ...fields });\n      hide();\n      message.success('修改成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('修改失败！');\n      return false;\n    }\n  };\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 3 },\n      sm: { span: 4 },\n    },\n    wrapperCol: {\n      xs: { span: 21 },\n      sm: { span: 20 },\n    },\n  };\n  return (\n    <ModalForm\n      {...formItemLayout}\n      title=\"编辑\"\n      width=\"800px\"\n      layout={'horizontal'}\n      visible={true}\n      onVisibleChange={onVisibleChange}\n      onFinish={async (value) => {\n        if (value.images) {\n          value.images = [value.images];\n        }\n        const success = await handleEdit(value as TableListItem);\n        if (success) {\n          onFinish();\n        }\n      }}\n      initialValues={data}\n    >\n      {template\n        .filter((item: any) => item.edit)\n        .map((item: any) => {\n          let form = <ProFormText {...item.edit} label={item.title} name={item.dataIndex} />;\n          switch (item.edit ? item.edit.type || '' : '') {\n            case 'input':\n              form = <ProFormText {...item.edit} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'textArea':\n              form = <ProFormTextArea {...item.edit} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'select':\n              form = <ProFormSelect {...item.edit} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'radio':\n              form = <ProFormRadio.Group {...item.edit} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'switch':\n              form = <ProFormSwitch {...item.edit} label={item.title} name={item.dataIndex} />;\n              break;\n              // case 'image':\n              //   form = (\n              //     <ProFormUploadButton\n              //       fieldProps={{\n              //         name: 'file',\n              //         listType: 'picture-card',\n              //       }}\n              //       action=\"/upload.do\"\n              //       {...item.create}\n              //       label={item.title}\n              //       name={item.dataIndex}\n              //     />\n              //   );\n              break;\n          }\n          return form;\n        })}\n    </ModalForm>\n  );\n};\n\nexport default UpdatePart;\n","import { message } from 'antd';\nimport React from 'react';\nimport {\n  ModalForm,\n  ProFormText,\n  ProFormTextArea,\n  ProFormSwitch,\n  ProFormSelect,\n  ProFormRadio,\n} from '@ant-design/pro-form';\nimport { addList } from './service';\nimport type { TableListItem } from './data';\nexport type CreatePartProps = {\n  onVisibleChange: (e?: any) => void;\n  onFinish: (e?: any) => void;\n  template: any;\n};\nconst CreatePart: React.FC<CreatePartProps> = (props) => {\n  const { template = [], onVisibleChange, onFinish } = props;\n  const handleAdd = async (fields: TableListItem) => {\n    const hide = message.loading('正在添加');\n    try {\n      await addList({ ...fields });\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 3 },\n      sm: { span: 4 },\n    },\n    wrapperCol: {\n      xs: { span: 21 },\n      sm: { span: 20 },\n    },\n  };\n  return (\n    <ModalForm\n      {...formItemLayout}\n      title=\"新增\"\n      width=\"800px\"\n      layout={'horizontal'}\n      visible={true}\n      onVisibleChange={onVisibleChange}\n      onFinish={async (value) => {\n        if (value.images) {\n          value.images = [value.images];\n        }\n        const success = await handleAdd(value as TableListItem);\n        if (success) {\n          onFinish();\n        }\n      }}\n    >\n      {template\n        .filter((item: any) => item.create && JSON.stringify(item.create) !== '{}')\n        .map((item: any) => {\n          let form = <ProFormText {...item.create} label={item.title} name={item.dataIndex} />;\n          switch (item.create ? item.create.type || '' : '') {\n            case 'input':\n              form = <ProFormText {...item.create} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'textArea':\n              form = (\n                <ProFormTextArea\n                  {...item.create}\n                  label={item.title}\n                  name={item.dataIndex}\n                  colProps={{ span: 24 }}\n                />\n              );\n              break;\n            case 'select':\n              form = <ProFormSelect {...item.create} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'radio':\n              form = (\n                <ProFormRadio.Group {...item.create} label={item.title} name={item.dataIndex} />\n              );\n              break;\n            case 'switch':\n              form = <ProFormSwitch {...item.create} label={item.title} name={item.dataIndex} />;\n            //   case 'image':\n            //     form = (\n            //       <ProFormUploadButton\n            //         fieldProps={{\n            //           name: 'file',\n            //           listType: 'picture-card',\n            //         }}\n            //         action=\"/upload.do\"\n            //         {...item.create}\n            //         label={item.title}\n            //         name={item.dataIndex}\n            //       />\n            //     );\n            //     break;\n          }\n          return form;\n        })}\n    </ModalForm>\n  );\n};\n\nexport default CreatePart;\n","import { PlusOutlined } from '@ant-design/icons';\nimport { Button, message, Upload, Image, Modal } from 'antd';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { ProColumns, ActionType } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport { ModalForm, ProFormText, ProFormTextArea, ProFormSelect } from '@ant-design/pro-form';\nimport {\n  requestTabs,\n  requestList,\n  removeList,\n  importList,\n  getTemplate,\n  exportList,\n  addList,\n} from './service';\nimport type { TableListItem, TableListPagination } from './data';\nimport { useParams } from 'react-router';\nimport { history } from 'umi';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport styles from './index.less';\nimport SliderPart from './SliderPart';\nimport UpdatePart from './UpdatePart';\nimport CreatePart from './CreatePart';\nconst TableList: React.FC = () => {\n  const XLSX = require('xlsx');\n  const handleExport = async (fields: TableListItem[]) => {\n    const hide = message.loading('正在添加');\n    try {\n      await importList(fields);\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const uploadprops = {\n    accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    name: 'file',\n    headers: {\n      authorization: 'authorization-text',\n    },\n    showUploadList: false,\n    beforeUpload: (file: any, fileList: any) => {\n      const rABS = true;\n      const f = fileList[0];\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        let dataResult = e.target.result;\n        if (!rABS) dataResult = new Uint8Array(dataResult);\n        const workbook = XLSX.read(dataResult, {\n          type: rABS ? 'binary' : 'array',\n        });\n        const firstWorksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonArr = XLSX.utils.sheet_to_json(firstWorksheet, { header: 1 });\n        handleExport(jsonArr);\n      };\n      if (rABS) reader.readAsBinaryString(f);\n      else reader.readAsArrayBuffer(f);\n      return false;\n    },\n  };\n\n  const handleDelete = async (selectedRows: TableListItem[]) => {\n    const hide = message.loading('正在删除');\n    if (!selectedRows) return true;\n    try {\n      await removeList({\n        id: selectedRows.map((row) => row.id),\n      });\n      hide();\n      message.success('删除成功，即将刷新');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('删除失败，请重试');\n      return false;\n    }\n  };\n  const path: string = location.pathname.replace('/antdpro-demo', '');\n  const [createManyModalVisible, handleManyModalVisible] = useState<boolean>(false);\n  const [createModalVisible, handleModalVisible] = useState<boolean>(false);\n  const [updateModalVisible, handleUpdateModalVisible] = useState<boolean>(false);\n  const actionRef = useRef<ActionType>();\n  const [currentRow, setCurrentRow] = useState<TableListItem>();\n  const [tabActiveKey, setTabActiveKey] = useState<any>(\n    path.split('/')[path.split('/').length - 1],\n  );\n  const [selectedRowsState, setSelectedRows] = useState<TableListItem[]>([]);\n  const params: any = useParams();\n  const [tabs, setTabs] = useState<any>([]);\n  const [templateData, setTemplateData] = useState<any>([]);\n  const [options, setOptions] = useState<any[]>([]);\n  const [showDetail, setShowDetail] = useState<boolean>(false);\n  const handleAdd = async (fields: TableListItem) => {\n    const hide = message.loading('正在添加');\n    try {\n      await addList({ ...fields });\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const getTemplateData = async (key: string) => {\n    let template: any = [];\n    if (path.includes('template') || path.includes('backend') || path.includes('tab')) {\n      template = await require(`../${path.split('/')[2]}/${key}.json`);\n    } else {\n      const result = await getTemplate(key, path.split('/')[2]);\n      template = result.data;\n      for (let i = 0; i < template.length; i++) {\n        const item = template[i];\n        Object.keys(item).forEach((field: any) => {\n          if (typeof item[field] === 'string') {\n            if (item[field].includes('{}')) {\n              template[i][field] = false;\n            } else if (item[field].includes('{')) {\n              template[i][field] = JSON.parse(item[field]);\n            }\n          }\n        });\n      }\n    }\n    setTemplateData(template);\n    const tabsData = await requestTabs({});\n    setTabs(tabsData.data);\n    if (location.href.includes('id')) {\n      const arr = location.href.split('?id=');\n      const id: string = arr[arr.length - 1];\n      const result = await requestList({ current: 1, pageSize: 1 }, { id });\n      setOptions(result.data);\n    }\n  };\n  const handleOnSearch = async () => {\n    const { data } = await requestList({ current: 1 });\n    setOptions(data);\n  };\n  useEffect(() => {\n    getTemplateData(params.id);\n    handleOnSearch();\n  }, [params.id]);\n  const handleOnTabChange = async (key: string) => {\n    await getTemplateData(key);\n    setTabActiveKey(key);\n    if (actionRef.current) {\n      actionRef.current.reload();\n    }\n    history.push(path.slice(0, -1) + key);\n  };\n  const columns: ProColumns<TableListItem>[] = [\n    {\n      title: '编号',\n      dataIndex: 'id',\n      width: 160,\n      fixed: 'left',\n      align: 'center',\n      hideInSearch: true,\n      hideInDescriptions: true,\n      render: (dom, entity) => {\n        return (\n          <a\n            onClick={() => {\n              setCurrentRow(entity);\n              setShowDetail(true);\n            }}\n          >\n            {dom}\n          </a>\n        );\n      },\n    },\n    ...templateData.map((item: any) => {\n      item.hideInSearch = !item.search || JSON.stringify(item.search) === '{}';\n      item.hideInTable = !item.table || JSON.stringify(item.table) === '{}';\n      return {\n        ...item,\n        defaultSortOrder: 'descend',\n        sorter: (a: any, b: any) => a[item.dataIndex] - b[item.dataIndex],\n        ...item.table,\n        renderFormItem: () => {\n          if (item.search && item.search.type === 'select') {\n            return (\n              <ProFormSelect\n                name={item.dataIndex}\n                options={[...new Set(options.map((o: any) => o[item.dataIndex]))].map(\n                  (name: string) => ({\n                    label: name,\n                    value: name,\n                  }),\n                )}\n              />\n            );\n          } else {\n            return <ProFormText name={item.dataIndex} />;\n          }\n        },\n        render: (dom: any) => {\n          if (!item.hideInTable && item.table && item.table.type === 'image') {\n            if (Array.isArray(dom)) {\n              return dom.map((i: any, key) => <Image height={100} src={i} key={key} />);\n            } else {\n              return <Image height={100} src={dom} />;\n            }\n          }\n          if (!item.hideInTable && item.table && item.table.type === 'radio') {\n            return item.table.options.find((i: any) => i.value === dom)?.label;\n          }\n          if (!item.hideInTable && item.table && item.table.type === 'time') {\n            return <div style={{ whiteSpace: 'pre-line' }}>{moment(dom).fromNow()}</div>;\n          }\n          return dom;\n        },\n      };\n    }),\n    {\n      title: '操作',\n      dataIndex: 'option',\n      valueType: 'option',\n      fixed: 'right',\n      width: 160,\n      render: (_, record: any) => [\n        <a\n          key=\"add\"\n          onClick={async () => {\n            const copyParams: any = {};\n            templateData\n              .filter((item: any) => item.create)\n              .forEach((field: any) => {\n                if (record[field.dataIndex]) {\n                  copyParams[field.dataIndex] = record[field.dataIndex];\n                }\n              });\n            const success = await handleAdd(copyParams as TableListItem);\n            if (success) {\n              handleModalVisible(false);\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n        >\n          添加\n        </a>,\n        <a\n          key=\"edit\"\n          onClick={() => {\n            const obj: any = {};\n            for (const key in record) {\n              if (typeof record[key] === 'object') {\n                obj[key] = JSON.stringify(record[key]);\n              } else {\n                obj[key] = record[key];\n              }\n            }\n            setCurrentRow(obj);\n            handleUpdateModalVisible(true);\n          }}\n        >\n          修改\n        </a>,\n        <a\n          key=\"delete\"\n          onClick={() => {\n            Modal.confirm({\n              title: '删除数据',\n              content: '确定删除该数据吗？',\n              okText: '确认',\n              cancelText: '取消',\n              onOk: async () => {\n                await handleDelete([record] as TableListItem[]);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              },\n            });\n          }}\n        >\n          删除\n        </a>,\n      ],\n    },\n  ];\n\n  return (\n    <PageContainer\n      className={classNames('container-part', styles['container-part'])}\n      onTabChange={handleOnTabChange}\n      header={{\n        title: false,\n        ghost: true,\n      }}\n      tabList={\n        location.pathname.includes('tab')\n          ? []\n          : tabs\n              .reverse((a: any, b: any) => a.type - b.type)\n              .map((item: any) => ({ tab: item.name, key: item.type }))\n      }\n      tabActiveKey={tabActiveKey}\n    >\n      <ProTable<TableListItem, TableListPagination>\n        className={classNames('table-part', styles['table-part'])}\n        sticky\n        actionRef={actionRef}\n        ghost={true}\n        rowKey=\"id\"\n        scroll={{ x: 800, y: 260 }}\n        search={{\n          labelWidth: 80,\n          optionRender: (searchConfig, formProps, dom) => {\n            return dom;\n          },\n        }}\n        toolBarRender={() => [\n          <Button\n            type=\"primary\"\n            key=\"primary\"\n            onClick={(): any => {\n              if (!selectedRowsState.length) {\n                return message.warning('请选择数据');\n              }\n              Modal.confirm({\n                title: '删除数据',\n                content: '确定删除该数据吗？',\n                okText: '确认',\n                cancelText: '取消',\n                onOk: async () => {\n                  await handleDelete(selectedRowsState);\n                  setSelectedRows([]);\n                  if (actionRef.current) {\n                    actionRef.current.reload();\n                  }\n                },\n              });\n            }}\n          >\n            批量删除\n          </Button>,\n          <Button\n            type=\"primary\"\n            key=\"primary\"\n            onClick={(): any => {\n              Modal.confirm({\n                title: '导出数据',\n                content: '确定导出全部数据吗？',\n                okText: '确认',\n                cancelText: '取消',\n                onOk: async () => {\n                  await exportList();\n                },\n              });\n            }}\n          >\n            全部导出\n          </Button>,\n          <Button\n            type=\"primary\"\n            key=\"primary\"\n            onClick={async () => {\n              Modal.confirm({\n                title: '导出数据',\n                content: '确定导出选中数据吗？',\n                okText: '确认',\n                cancelText: '取消',\n                onOk: async () => {\n                  const res: any = await exportList(selectedRowsState);\n                  debugger;\n                  const blob = new Blob([res.data], {\n                    type: 'application/vnd.ms-excel;charset=utf-8',\n                  });\n                  const downloadElement = document.createElement('a');\n                  const href = window.URL.createObjectURL(blob); //创建下载的链接\n                  downloadElement.href = href;\n                  downloadElement.download =\n                    decodeURI(res.headers['content-disposition'].split('filename=')[1]) || ''; //下载后文件名\n                  document.body.appendChild(downloadElement);\n                  downloadElement.click(); //点击下载\n                  document.body.removeChild(downloadElement); //下载完成移除元素\n                  window.URL.revokeObjectURL(href); //释放掉blob对象\n                  setSelectedRows([]);\n                  if (actionRef.current) {\n                    actionRef.current.reload();\n                  }\n                },\n              });\n            }}\n          >\n            批量导出\n          </Button>,\n          <Upload\n            {...uploadprops}\n            onChange={() => {\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }}\n          >\n            <Button type=\"primary\">批量导入</Button>\n          </Upload>,\n          // <Button\n          //   type=\"primary\"\n          //   key=\"primary\"\n          //   onClick={() => {\n          //     alert('导入');\n          //   }}\n          // >\n          //   <PlusOutlined /> 导入\n          // </Button>,\n          <Button\n            type=\"primary\"\n            key=\"primary\"\n            onClick={() => {\n              handleModalVisible(true);\n            }}\n          >\n            <PlusOutlined /> 新建\n          </Button>,\n          <Button\n            type=\"primary\"\n            key=\"primary\"\n            onClick={() => {\n              handleManyModalVisible(true);\n            }}\n          >\n            <PlusOutlined /> 批量添加\n          </Button>,\n        ]}\n        request={requestList}\n        columns={columns}\n        rowSelection={{\n          onChange: (_, selectedRows) => {\n            setSelectedRows(selectedRows);\n          },\n        }}\n        options={{\n          density: false,\n          fullScreen: true,\n          reload: true,\n          setting: true,\n        }}\n        pagination={{\n          showQuickJumper: true,\n          pageSizeOptions: ['10', '20', '30', '40'],\n          defaultPageSize: 10,\n        }}\n      />\n      {createManyModalVisible && (\n        <ModalForm\n          title=\"JSON批量新增\"\n          width=\"800px\"\n          layout={'horizontal'}\n          visible={createManyModalVisible}\n          onVisibleChange={handleManyModalVisible}\n          onFinish={async (data: any) => {\n            const value = JSON.parse(data.content);\n            for (let i = 0; i < value.length; i++) {\n              const item = value[i];\n              const success = await handleAdd(item as TableListItem);\n              if (success) {\n                handleManyModalVisible(false);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              }\n            }\n          }}\n        >\n          <ProFormTextArea\n            name=\"content\"\n            placeholder=\"请输入JSON数据\"\n            colProps={{ span: 24 }}\n            allowClear\n          />\n        </ModalForm>\n      )}\n      {createModalVisible && templateData && (\n        <CreatePart\n          template={templateData}\n          onVisibleChange={handleModalVisible}\n          onFinish={() => {\n            handleModalVisible(false);\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }}\n        />\n      )}\n      {updateModalVisible && templateData && (\n        <UpdatePart\n          template={templateData}\n          data={currentRow}\n          onVisibleChange={handleUpdateModalVisible}\n          onFinish={() => {\n            handleUpdateModalVisible(false);\n            setCurrentRow(undefined);\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }}\n        />\n      )}\n      {showDetail && templateData && (\n        <SliderPart\n          template={templateData}\n          data={currentRow}\n          onClose={() => {\n            setCurrentRow(undefined);\n            setShowDetail(false);\n          }}\n        />\n      )}\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n","var map = {\n\t\"./backend/1.json\": 46753,\n\t\"./backend/2.json\": 77714,\n\t\"./backend/3.json\": 66356,\n\t\"./backend/4.json\": 75058,\n\t\"./backend/5.json\": 35734,\n\t\"./backend/6.json\": 32213,\n\t\"./backend/7.json\": 439,\n\t\"./backend/8.json\": 69935,\n\t\"./backend/backend1data.json\": 45647,\n\t\"./tab/1.json\": 7102,\n\t\"./tab/2.json\": 4371,\n\t\"./tab/3.json\": 39255,\n\t\"./tab/4.json\": 62703,\n\t\"./tab/5.json\": 86570,\n\t\"./tab/6.json\": 47714,\n\t\"./tab/7.json\": 82759,\n\t\"./tab/8.json\": 34768,\n\t\"./tab/backend1data.json\": 75441,\n\t\"./template/1.json\": 82734,\n\t\"./template/2.json\": 67029,\n\t\"./template/3.json\": 55893,\n\t\"./template/4.json\": 44109,\n\t\"./template/5.json\": 26843,\n\t\"./template/6.json\": 17859,\n\t\"./template/7.json\": 59774,\n\t\"./template/8.json\": 58843,\n\t\"./template/template1data.json\": 43465\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7372;"],"sourceRoot":""}