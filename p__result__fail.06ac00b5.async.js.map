{"version":3,"sources":["webpack://ant-design-pro/./node_modules/@ant-design/pro-layout/es/RouteContext.js","webpack://ant-design-pro/./node_modules/@ant-design/pro-layout/es/components/GridContent/index.js","webpack://ant-design-pro/./src/pages/result/fail/index.less","webpack://ant-design-pro/./src/pages/result/fail/index.tsx"],"names":["Content","styles","marginBottom","marginRight","marginLeft","marginTop"],"mappings":"sIACI,EAA4B,oBAAc,IAC9C,IAAe,G,sICYX,EAAc,SAAqB,EAAO,CAC5C,GAAI,GAAQ,iBAAW,KACnB,EAAW,EAAM,SACjB,EAAoB,EAAM,aAC1B,EAAiB,EAAM,UACvB,EAAQ,EAAM,MAEd,EAAc,iBAAW,oBACzB,EAAe,EAAY,aAE3B,EAAY,EAAM,WAAa,EAAa,OAC5C,EAAe,GAAqB,EAAM,aAC1C,EAAY,GAAG,OAAO,EAAW,iBACrC,MAAO,UAAK,MAAO,CACjB,UAAW,IAAW,EAAW,EAAgB,CAC/C,KAAM,IAAiB,UAEzB,MAAO,EACP,SAAU,UAAK,MAAO,CACpB,UAAW,GAAG,OAAO,EAAW,0BAChC,SAAU,OAKhB,IAAe,G,kBCtCf,EAAO,QAAU,CAAC,WAAa,qBAAqB,MAAQ,kB,6MCMtDA,EACJ,WAAC,WAAD,WACE,iBAAK,UAAWC,UAAhB,SACE,0GAEF,kBAAK,MAAO,CAAEC,aAAc,IAA5B,UACE,UAAC,IAAD,CAAqB,MAAO,CAAEC,YAAa,GAAK,UAAWF,iBAC3D,gFACA,gBAAG,MAAO,CAAEG,WAAY,IAAxB,UACE,wDACA,UAAC,IAAD,UAGJ,4BACE,UAAC,IAAD,CAAqB,MAAO,CAAED,YAAa,GAAK,UAAWF,iBAC3D,wGACA,gBAAG,MAAO,CAAEG,WAAY,IAAxB,UACE,wDACA,UAAC,IAAD,aAMR,UAAe,iBACb,UAAC,IAAD,UACE,eAAM,SAAU,GAAhB,SACE,gBACE,OAAO,QACP,MAAM,2BACN,SAAS,+GACT,MACE,eAAQ,KAAK,UAAb,SACE,0DAGJ,MAAO,CAAEC,UAAW,GAAIH,aAAc,IATxC,SAWGF","file":"p__result__fail.06ac00b5.async.js","sourcesContent":["import { createContext } from 'react';\nvar routeContext = /*#__PURE__*/createContext({});\nexport default routeContext;","import \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { useContext } from 'react';\nimport RouteContext from '../../RouteContext';\nimport './GridContent.less';\n/**\n * This component can support contentWidth so you don't need to calculate the width\n * contentWidth=Fixed, width will is 1200\n *\n * @param props\n */\n\nvar GridContent = function GridContent(props) {\n  var value = useContext(RouteContext);\n  var children = props.children,\n      propsContentWidth = props.contentWidth,\n      propsClassName = props.className,\n      style = props.style;\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var prefixCls = props.prefixCls || getPrefixCls('pro');\n  var contentWidth = propsContentWidth || value.contentWidth;\n  var className = \"\".concat(prefixCls, \"-grid-content\");\n  return _jsx(\"div\", {\n    className: classNames(className, propsClassName, {\n      wide: contentWidth === 'Fixed'\n    }),\n    style: style,\n    children: _jsx(\"div\", {\n      className: \"\".concat(prefixCls, \"-grid-content-children\"),\n      children: children\n    })\n  });\n};\n\nexport default GridContent;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_icon\":\"error_icon___3tajM\",\"title\":\"title___1mmDs\"};","import { CloseCircleOutlined, RightOutlined } from '@ant-design/icons';\nimport { Button, Card, Result } from 'antd';\nimport { Fragment } from 'react';\n\nimport { GridContent } from '@ant-design/pro-layout';\nimport styles from './index.less';\n\nconst Content = (\n  <Fragment>\n    <div className={styles.title}>\n      <span>您提交的内容有如下错误：</span>\n    </div>\n    <div style={{ marginBottom: 16 }}>\n      <CloseCircleOutlined style={{ marginRight: 8 }} className={styles.error_icon} />\n      <span>您的账户已被冻结</span>\n      <a style={{ marginLeft: 16 }}>\n        <span>立即解冻</span>\n        <RightOutlined />\n      </a>\n    </div>\n    <div>\n      <CloseCircleOutlined style={{ marginRight: 8 }} className={styles.error_icon} />\n      <span>您的账户还不具备申请资格</span>\n      <a style={{ marginLeft: 16 }}>\n        <span>立即升级</span>\n        <RightOutlined />\n      </a>\n    </div>\n  </Fragment>\n);\n\nexport default () => (\n  <GridContent>\n    <Card bordered={false}>\n      <Result\n        status=\"error\"\n        title=\"提交失败\"\n        subTitle=\"请核对并修改以下信息后，再重新提交。\"\n        extra={\n          <Button type=\"primary\">\n            <span>返回修改</span>\n          </Button>\n        }\n        style={{ marginTop: 48, marginBottom: 16 }}\n      >\n        {Content}\n      </Result>\n    </Card>\n  </GridContent>\n);\n"],"sourceRoot":""}