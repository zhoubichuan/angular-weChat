{"version":3,"sources":["webpack://ant-design-pro/./src/pages/list/list/index.less","webpack://ant-design-pro/./src/pages/list/list/service.ts","webpack://ant-design-pro/./src/pages/list/list/SliderPart.tsx","webpack://ant-design-pro/./src/pages/list/list/UpdatePart.tsx","webpack://ant-design-pro/./src/pages/list/list/CreatePart.tsx","webpack://ant-design-pro/./src/pages/list/list/TablePart.tsx","webpack://ant-design-pro/./src/pages/list/list/index.tsx","webpack://ant-design-pro//home/runner/work/antdpro-demo/antdpro-demo/src/pages/list|sync|/^\\.\\/.*\\.json$/"],"names":["key","type","request","method","params","options","location","pathname","replace","data","responseType","SliderPart","props","template","onClose","descriptions","filter","item","JSON","stringify","view","map","width","ellipsis","rest","render","text","Array","isArray","i","whiteSpace","moment","fromNow","id","UpdatePart","onVisibleChange","onFinish","useState","createModalVisible","handleModalVisible","handleEdit","fields","hide","updateList","formItemLayout","labelCol","xs","span","sm","wrapperCol","value","images","success","o","edit","form","title","dataIndex","CreatePart","handleAdd","addList","create","TablePart","actionRef","useRef","selectedRowsState","setSelectedRows","onViewDetail","onEdit","onCreate","onManyCreate","XLSX","require","handleExport","importList","handleDelete","selectedRows","removeList","row","uploadprops","accept","name","headers","authorization","showUploadList","beforeUpload","file","fileList","rABS","f","reader","FileReader","onload","e","dataResult","target","result","Uint8Array","workbook","read","firstWorksheet","Sheets","SheetNames","jsonArr","utils","sheet_to_json","header","readAsBinaryString","readAsArrayBuffer","columns","fixed","align","hideInSearch","hideInDescriptions","dom","entity","search","hideInTable","table","defaultSortOrder","sorter","a","b","renderFormItem","Set","label","find","valueType","_","record","copyParams","forEach","field","current","reload","obj","content","okText","cancelText","onOk","classNames","styles","x","y","labelWidth","optionRender","searchConfig","formProps","length","exportList","res","blob","Blob","downloadElement","document","createElement","href","window","URL","createObjectURL","download","decodeURI","split","body","appendChild","click","removeChild","revokeObjectURL","requestList","onChange","density","fullScreen","setting","showQuickJumper","pageSizeOptions","defaultPageSize","TableList","useLocation","useParams","createManyModalVisible","handleManyModalVisible","updateModalVisible","handleUpdateModalVisible","currentRow","setCurrentRow","tabActiveKey","setTabActiveKey","tabs","setTabs","templateData","setTemplateData","setOptions","showDetail","setShowDetail","getTemplateData","includes","getTemplate","Object","keys","parse","requestTabs","tabsData","pageSize","handleOnSearch","useEffect","history","slice","ghost","reverse","tab","undefined"],"mappings":"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","file":"p__list__list.23eca9cf.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table-part\":\"table-part___IbfjC\"};","import { request } from 'umi';\n\nimport { TableListItem } from './data';\nexport async function getTemplate(key: string, type: string) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/template/' + key, {\n    method: 'GET',\n    params: {\n      type: type,\n    },\n  });\n}\nexport async function requestList(\n  params: {\n    current?: number;\n    pageSize?: number;\n  },\n  options?: { [key: string]: any },\n) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'GET',\n    params: {\n      ...params,\n    },\n    ...(options || {}),\n  });\n}\nexport async function requestTabs(\n  params: {\n    current?: number;\n    pageSize?: number;\n  },\n  options?: {},\n) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/tab/1', {\n    method: 'GET',\n    params: {\n      ...params,\n    },\n    ...(options || {}),\n  });\n}\nexport async function updateList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'PUT',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function addList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'POST',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function removeList(options?: { [key: string]: any }) {\n  return request<Record<string, any>>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'DELETE',\n    data: { ...(options || {}) },\n  });\n}\nexport async function importList(options?: { [key: string]: any }) {\n  return request<TableListItem>(\n    '/api' + location.pathname.replace('/antdpro-demo', '') + '/import',\n    {\n      method: 'POST',\n      data: options,\n    },\n  );\n}\nexport async function exportList(options?: { [key: string]: any }) {\n  return request<TableListItem>(\n    '/api' + location.pathname.replace('/antdpro-demo', '') + '/export',\n    {\n      method: 'POST',\n      responseType: 'blob',\n      data: options,\n    },\n  );\n}\n","import type { ProDescriptionsItemProps } from '@ant-design/pro-descriptions';\nimport ProDescriptions from '@ant-design/pro-descriptions';\nimport { Drawer } from 'antd';\nimport React from 'react';\nimport { CloseOutlined } from '@ant-design/icons';\nimport type { ProColumns } from '@ant-design/pro-table';\nimport { Image } from 'antd';\nimport moment from 'moment';\nimport type { TableListItem } from './data';\nexport type SliderPartProps = {\n  onClose?: (e?: any) => void;\n  data: any;\n  template: any;\n};\nconst SliderPart: React.FC<SliderPartProps> = (props) => {\n  const { data, template = [], onClose } = props;\n  const descriptions: ProColumns<TableListItem>[] = template\n    .filter((item: any) => JSON.stringify(item.view) !== '{}')\n    .map((item: any) => {\n      const { width, view, ellipsis, ...rest } = item;\n      return {\n        ...rest,\n        render: (text: any) => {\n          if (item.view && item.view.type === 'image') {\n            if (Array.isArray(text)) {\n              return text.map((i: any) => <Image height={300} src={i} />);\n            } else {\n              return <Image height={300} src={text} />;\n            }\n          }\n          if (item.view && item.view.type === 'time') {\n            return <div style={{ whiteSpace: 'pre-line' }}>{moment(text).fromNow()}</div>;\n          }\n          return (\n            <div style={{ whiteSpace: 'pre-line' }}>\n              {typeof text === 'string' ? text : JSON.stringify(text)}\n            </div>\n          );\n        },\n      };\n    });\n\n  return (\n    <Drawer\n      title={data?.id}\n      destroyOnClose\n      closable={true}\n      closeIcon={<CloseOutlined />}\n      width={'80%'}\n      open={true}\n      onClose={onClose}\n    >\n      {data?.id && (\n        <ProDescriptions<TableListItem>\n          column={2}\n          request={async () => ({\n            data: data || {},\n          })}\n          params={{\n            id: data?.id,\n          }}\n          columns={descriptions as ProDescriptionsItemProps<TableListItem>[]}\n        />\n      )}\n    </Drawer>\n  );\n};\n\nexport default SliderPart;\n","import { message } from 'antd';\nimport React, { useState } from 'react';\nimport {\n  ModalForm,\n  ProFormText,\n  ProFormTextArea,\n  ProFormSwitch,\n  ProFormSelect,\n  ProFormRadio,\n} from '@ant-design/pro-form';\nimport { updateList } from './service';\nimport type { TableListItem } from './data';\nexport type UpdatePartProps = {\n  onVisibleChange: (e?: any) => void;\n  onFinish: (e?: any) => void;\n  data: any;\n  template: any;\n};\nconst UpdatePart: React.FC<UpdatePartProps> = (props) => {\n  const { data, template, onVisibleChange, onFinish } = props;\n  const [createModalVisible, handleModalVisible] = useState<boolean>(true);\n  const handleEdit = async (fields: TableListItem) => {\n    const hide = message.loading('正在配置');\n    try {\n      await updateList({ ...fields });\n      hide();\n      message.success('修改成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('修改失败！');\n      return false;\n    }\n  };\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 3 },\n      sm: { span: 4 },\n    },\n    wrapperCol: {\n      xs: { span: 21 },\n      sm: { span: 20 },\n    },\n  };\n  return (\n    <ModalForm\n      {...formItemLayout}\n      title=\"编辑\"\n      width=\"800px\"\n      layout={'horizontal'}\n      visible={createModalVisible}\n      onVisibleChange={onVisibleChange}\n      onFinish={async (value) => {\n        if (value.images) {\n          value.images = [value.images];\n        }\n        const success = await handleEdit(value as TableListItem);\n        if (success) {\n          onFinish();\n          handleModalVisible(false);\n        }\n      }}\n      initialValues={data}\n    >\n      {template\n        .filter((o: any) => o.edit && JSON.stringify(o.edit) !== '{}')\n        .map((item: any) => {\n          let form = <ProFormText {...item.edit} label={item.title} name={item.dataIndex} />;\n          switch (item.edit.type) {\n            case 'input':\n              form = <ProFormText {...item.edit} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'textArea':\n              form = <ProFormTextArea {...item.edit} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'select':\n              form = <ProFormSelect {...item.edit} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'radio':\n              form = <ProFormRadio.Group {...item.edit} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'switch':\n              form = <ProFormSwitch {...item.edit} label={item.title} name={item.dataIndex} />;\n              break;\n              // case 'image':\n              //   form = (\n              //     <ProFormUploadButton\n              //       fieldProps={{\n              //         name: 'file',\n              //         listType: 'picture-card',\n              //       }}\n              //       action=\"/upload.do\"\n              //       {...item.create}\n              //       label={item.title}\n              //       name={item.dataIndex}\n              //     />\n              //   );\n              break;\n          }\n          return form;\n        })}\n    </ModalForm>\n  );\n};\n\nexport default UpdatePart;\n","import { message } from 'antd';\nimport React, { useState } from 'react';\nimport {\n  ModalForm,\n  ProFormText,\n  ProFormTextArea,\n  ProFormSwitch,\n  ProFormSelect,\n  ProFormRadio,\n} from '@ant-design/pro-form';\nimport { addList } from './service';\nimport type { TableListItem } from './data';\nexport type CreatePartProps = {\n  onVisibleChange: (e?: any) => void;\n  onFinish: (e?: any) => void;\n  template: any;\n};\nconst CreatePart: React.FC<CreatePartProps> = (props) => {\n  const { template = [], onVisibleChange, onFinish } = props;\n  const [createModalVisible, handleModalVisible] = useState<boolean>(true);\n  const handleAdd = async (fields: TableListItem) => {\n    const hide = message.loading('正在添加');\n    try {\n      await addList({ ...fields });\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 3 },\n      sm: { span: 4 },\n    },\n    wrapperCol: {\n      xs: { span: 21 },\n      sm: { span: 20 },\n    },\n  };\n  return (\n    <ModalForm\n      {...formItemLayout}\n      title=\"新增\"\n      width=\"800px\"\n      layout={'horizontal'}\n      visible={createModalVisible}\n      onVisibleChange={onVisibleChange}\n      onFinish={async (value) => {\n        if (value.images) {\n          value.images = [value.images];\n        }\n        const success = await handleAdd(value as TableListItem);\n        if (success) {\n          onFinish();\n          handleModalVisible(false);\n        }\n      }}\n    >\n      {template\n        .filter((item: any) => item.create && JSON.stringify(item.create) !== '{}')\n        .map((item: any) => {\n          let form = <ProFormText {...item.create} label={item.title} name={item.dataIndex} />;\n          switch (item.create ? item.create.type || '' : '') {\n            case 'input':\n              form = <ProFormText {...item.create} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'textArea':\n              form = (\n                <ProFormTextArea\n                  {...item.create}\n                  label={item.title}\n                  name={item.dataIndex}\n                  colProps={{ span: 24 }}\n                />\n              );\n              break;\n            case 'select':\n              form = <ProFormSelect {...item.create} label={item.title} name={item.dataIndex} />;\n              break;\n            case 'radio':\n              form = (\n                <ProFormRadio.Group {...item.create} label={item.title} name={item.dataIndex} />\n              );\n              break;\n            case 'switch':\n              form = <ProFormSwitch {...item.create} label={item.title} name={item.dataIndex} />;\n            //   case 'image':\n            //     form = (\n            //       <ProFormUploadButton\n            //         fieldProps={{\n            //           name: 'file',\n            //           listType: 'picture-card',\n            //         }}\n            //         action=\"/upload.do\"\n            //         {...item.create}\n            //         label={item.title}\n            //         name={item.dataIndex}\n            //       />\n            //     );\n            //     break;\n          }\n          return form;\n        })}\n    </ModalForm>\n  );\n};\n\nexport default CreatePart;\n","import { PlusOutlined } from '@ant-design/icons';\nimport { Button, message, Upload, Modal, Image } from 'antd';\nimport React, { useRef, useState } from 'react';\nimport ProTable from '@ant-design/pro-table';\nimport type { ProColumns, ActionType } from '@ant-design/pro-table';\nimport { ModalForm, ProFormText, ProFormTextArea, ProFormSelect } from '@ant-design/pro-form';\nimport { requestList, removeList, importList, exportList, addList } from './service';\nimport styles from './index.less';\nimport type { TableListItem, TableListPagination } from './data';\nimport moment from 'moment';\nimport classNames from 'classnames';\n\nexport type TablePartProps = {\n  onViewDetail: (e?: any) => void;\n  onEdit: (e?: any) => void;\n  onCreate: (e?: any) => void;\n  onManyCreate: (e?: any) => void;\n  template: any[];\n  options: string[];\n};\nconst TablePart: React.FC<TablePartProps> = (props) => {\n  const actionRef = useRef<ActionType>();\n  const [selectedRowsState, setSelectedRows] = useState<TableListItem[]>([]);\n  const { template = [], onViewDetail, onEdit, onCreate, onManyCreate, options = [] } = props;\n  const XLSX = require('xlsx');\n  const handleExport = async (fields: TableListItem[]) => {\n    const hide = message.loading('正在添加');\n    try {\n      await importList(fields);\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const handleAdd = async (fields: TableListItem) => {\n    const hide = message.loading('正在添加');\n    try {\n      await addList({ ...fields });\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const handleDelete = async (selectedRows: TableListItem[]) => {\n    const hide = message.loading('正在删除');\n    if (!selectedRows) return true;\n    try {\n      await removeList({\n        id: selectedRows.map((row) => row.id),\n      });\n      hide();\n      message.success('删除成功，即将刷新');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('删除失败，请重试');\n      return false;\n    }\n  };\n  const uploadprops = {\n    accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    name: 'file',\n    headers: {\n      authorization: 'authorization-text',\n    },\n    showUploadList: false,\n    beforeUpload: (file: any, fileList: any) => {\n      const rABS = true;\n      const f = fileList[0];\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        let dataResult = e.target.result;\n        if (!rABS) dataResult = new Uint8Array(dataResult);\n        const workbook = XLSX.read(dataResult, {\n          type: rABS ? 'binary' : 'array',\n        });\n        const firstWorksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonArr = XLSX.utils.sheet_to_json(firstWorksheet, { header: 1 });\n        handleExport(jsonArr);\n      };\n      if (rABS) reader.readAsBinaryString(f);\n      else reader.readAsArrayBuffer(f);\n      return false;\n    },\n  };\n\n  const columns: ProColumns<TableListItem>[] = [\n    {\n      title: '编号',\n      dataIndex: 'id',\n      width: 160,\n      fixed: 'left',\n      align: 'center',\n      hideInSearch: true,\n      hideInDescriptions: true,\n      render: (dom, entity) => {\n        return (\n          <a\n            onClick={() => {\n              onViewDetail(entity);\n            }}\n          >\n            {dom}\n          </a>\n        );\n      },\n    },\n    ...template.map((item: any) => {\n      item.hideInSearch = !item.search || JSON.stringify(item.search) === '{}';\n      item.hideInTable = !item.table || JSON.stringify(item.table) === '{}';\n      return {\n        ...item,\n        defaultSortOrder: 'descend',\n        sorter: (a: any, b: any) => a[item.dataIndex] - b[item.dataIndex],\n        ...item.table,\n        renderFormItem: () => {\n          if (item.search && item.search.type === 'select') {\n            return (\n              <ProFormSelect\n                name={item.dataIndex}\n                options={[...new Set(options.map((o: any) => o[item.dataIndex]))].map(\n                  (name: string) => ({\n                    label: name,\n                    value: name,\n                  }),\n                )}\n              />\n            );\n          } else {\n            return <ProFormText name={item.dataIndex} />;\n          }\n        },\n        render: (dom: any) => {\n          if (!item.hideInTable && item.table && item.table.type === 'image') {\n            if (Array.isArray(dom)) {\n              return dom.map((i: any, key) => <Image height={100} src={i} key={key} />);\n            } else {\n              return <Image height={100} src={dom} />;\n            }\n          }\n          if (!item.hideInTable && item.table && item.table.type === 'radio') {\n            return item.table.options.find((i: any) => i.value === dom)?.label;\n          }\n          if (!item.hideInTable && item.table && item.table.type === 'time') {\n            return <div style={{ whiteSpace: 'pre-line' }}>{moment(dom).fromNow()}</div>;\n          }\n          return dom;\n        },\n      };\n    }),\n    {\n      title: '操作',\n      dataIndex: 'option',\n      valueType: 'option',\n      fixed: 'right',\n      width: 160,\n      render: (_, record: any) => [\n        <a\n          key=\"add\"\n          onClick={async () => {\n            const copyParams: any = {};\n            template\n              .filter((item: any) => item.create)\n              .forEach((field: any) => {\n                if (record[field.dataIndex]) {\n                  copyParams[field.dataIndex] = record[field.dataIndex];\n                }\n              });\n            const success = await handleAdd(copyParams as TableListItem);\n            if (success) {\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n        >\n          添加\n        </a>,\n        <a\n          key=\"edit\"\n          onClick={() => {\n            const obj: any = {};\n            for (const key in record) {\n              if (typeof record[key] === 'object') {\n                obj[key] = JSON.stringify(record[key]);\n              } else {\n                obj[key] = record[key];\n              }\n            }\n            onEdit(obj);\n          }}\n        >\n          修改\n        </a>,\n        <a\n          key=\"delete\"\n          onClick={() => {\n            Modal.confirm({\n              title: '删除数据',\n              content: '确定删除该数据吗？',\n              okText: '确认',\n              cancelText: '取消',\n              onOk: async () => {\n                await handleDelete([record] as TableListItem[]);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              },\n            });\n          }}\n        >\n          删除\n        </a>,\n      ],\n    },\n  ];\n  return (\n    <ProTable<TableListItem, TableListPagination>\n      className={classNames('table-part', styles['table-part'])}\n      sticky\n      actionRef={actionRef}\n      ghost={true}\n      rowKey=\"id\"\n      scroll={{ x: 800, y: 260 }}\n      search={{\n        labelWidth: 80,\n        optionRender: (searchConfig, formProps, dom) => {\n          return dom;\n        },\n      }}\n      toolBarRender={() => [\n        <Button\n          type=\"primary\"\n          key=\"primary\"\n          onClick={(): any => {\n            if (!selectedRowsState.length) {\n              return message.warning('请选择数据');\n            }\n            Modal.confirm({\n              title: '删除数据',\n              content: '确定删除该数据吗？',\n              okText: '确认',\n              cancelText: '取消',\n              onOk: async () => {\n                await handleDelete(selectedRowsState);\n                setSelectedRows([]);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              },\n            });\n          }}\n        >\n          批量删除\n        </Button>,\n        <Button\n          type=\"primary\"\n          key=\"primary\"\n          onClick={(): any => {\n            Modal.confirm({\n              title: '导出数据',\n              content: '确定导出全部数据吗？',\n              okText: '确认',\n              cancelText: '取消',\n              onOk: async () => {\n                await exportList();\n              },\n            });\n          }}\n        >\n          全部导出\n        </Button>,\n        <Button\n          type=\"primary\"\n          key=\"primary\"\n          onClick={async () => {\n            Modal.confirm({\n              title: '导出数据',\n              content: '确定导出选中数据吗？',\n              okText: '确认',\n              cancelText: '取消',\n              onOk: async () => {\n                const res: any = await exportList(selectedRowsState);\n                const blob = new Blob([res.data], {\n                  type: 'application/vnd.ms-excel;charset=utf-8',\n                });\n                const downloadElement = document.createElement('a');\n                const href = window.URL.createObjectURL(blob); //创建下载的链接\n                downloadElement.href = href;\n                downloadElement.download =\n                  decodeURI(res.headers['content-disposition'].split('filename=')[1]) || ''; //下载后文件名\n                document.body.appendChild(downloadElement);\n                downloadElement.click(); //点击下载\n                document.body.removeChild(downloadElement); //下载完成移除元素\n                window.URL.revokeObjectURL(href); //释放掉blob对象\n                setSelectedRows([]);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              },\n            });\n          }}\n        >\n          批量导出\n        </Button>,\n        <Upload\n          {...uploadprops}\n          onChange={() => {\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }}\n        >\n          <Button type=\"primary\">批量导入</Button>\n        </Upload>,\n        // <Button\n        //   type=\"primary\"\n        //   key=\"primary\"\n        //   onClick={() => {\n        //     alert('导入');\n        //   }}\n        // >\n        //   <PlusOutlined /> 导入\n        // </Button>,\n        <Button type=\"primary\" key=\"primary\" onClick={onCreate}>\n          <PlusOutlined /> 新建\n        </Button>,\n        <Button type=\"primary\" key=\"primary\" onClick={onManyCreate}>\n          <PlusOutlined /> 批量添加\n        </Button>,\n      ]}\n      request={requestList}\n      columns={columns}\n      rowSelection={{\n        onChange: (_, selectedRows) => {\n          setSelectedRows(selectedRows);\n        },\n      }}\n      options={{\n        density: false,\n        fullScreen: true,\n        reload: true,\n        setting: true,\n      }}\n      pagination={{\n        showQuickJumper: true,\n        pageSizeOptions: ['10', '20', '30', '40'],\n        defaultPageSize: 10,\n      }}\n    />\n  );\n};\n\nexport default TablePart;\n","import { message } from 'antd';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport { ModalForm, ProFormTextArea } from '@ant-design/pro-form';\nimport { requestTabs, requestList, getTemplate, addList } from './service';\nimport type { TableListItem } from './data';\nimport { history, useLocation, useParams } from 'umi';\nimport type { ActionType } from '@ant-design/pro-table';\nimport classNames from 'classnames';\nimport styles from './index.less';\nimport SliderPart from './SliderPart';\nimport UpdatePart from './UpdatePart';\nimport CreatePart from './CreatePart';\nimport TablePart from './TablePart';\nconst TableList: React.FC = () => {\n  const { pathname }: any = useLocation();\n  const params: any = useParams();\n  const [createManyModalVisible, handleManyModalVisible] = useState<boolean>(false);\n  const [createModalVisible, handleModalVisible] = useState<boolean>(false);\n  const [updateModalVisible, handleUpdateModalVisible] = useState<boolean>(false);\n  const actionRef = useRef<ActionType>();\n  const [currentRow, setCurrentRow] = useState<TableListItem>();\n  const [tabActiveKey, setTabActiveKey] = useState<any>(\n    pathname.split('/')[pathname.split('/').length - 1],\n  );\n  const [tabs, setTabs] = useState<any>([]);\n  const [templateData, setTemplateData] = useState<any>([]);\n  const [options, setOptions] = useState<string[]>([]);\n  const [showDetail, setShowDetail] = useState<boolean>(false);\n  const handleAdd = async (fields: TableListItem) => {\n    const hide = message.loading('正在添加');\n    try {\n      await addList({ ...fields });\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const getTemplateData = async (key: string) => {\n    let template: any = [];\n    if (pathname.includes('template') || pathname.includes('backend') || pathname.includes('tab')) {\n      template = await require(`../${pathname.split('/')[2]}/${key}.json`);\n    } else {\n      const result = await getTemplate(key, pathname.split('/')[2]);\n      template = result.data;\n    }\n    for (let i = 0; i < template.length; i++) {\n      const item = template[i];\n      Object.keys(item).forEach((field: any) => {\n        if (typeof item[field] === 'string') {\n          if (item[field].includes('{}')) {\n            template[i][field] = false;\n          } else if (item[field].includes('{')) {\n            template[i][field] = JSON.parse(item[field]);\n          }\n        }\n      });\n    }\n    setTemplateData(template);\n    const tabsData = await requestTabs({});\n    setTabs(tabsData.data);\n    if (params?.id) {\n      const result: any = await requestList({ current: 1, pageSize: 1 }, { id: params.id });\n      setOptions(result.data);\n    }\n    setTabActiveKey(key);\n  };\n  const handleOnSearch = async () => {\n    const { data }: any = await requestList({ current: 1 });\n    setOptions(data);\n  };\n  useEffect(() => {\n    getTemplateData(params?.id || 1);\n    handleOnSearch();\n  }, []);\n  useEffect(() => {\n    getTemplateData(params.id);\n    handleOnSearch();\n  }, [params.id]);\n\n  return (\n    <PageContainer\n      className={classNames('container-part', styles['container-part'])}\n      onTabChange={async (key: string) => {\n        // await getTemplateData(key);\n        // if (actionRef.current) {\n        //   actionRef.current.reload();\n        // }\n        history.push(pathname.slice(0, -1) + key);\n      }}\n      header={{\n        title: false,\n        ghost: true,\n      }}\n      tabList={\n        pathname.includes('tab')\n          ? []\n          : tabs\n              .reverse((a: any, b: any) => a.type - b.type)\n              .map((item: any) => ({ tab: item.name, key: item.type }))\n      }\n      tabActiveKey={tabActiveKey}\n    >\n      <TablePart\n        options={options}\n        template={templateData}\n        onViewDetail={(entity) => {\n          setCurrentRow(entity);\n          setShowDetail(true);\n        }}\n        onEdit={(obj) => {\n          setCurrentRow(obj);\n          handleUpdateModalVisible(true);\n        }}\n        onCreate={() => {\n          handleModalVisible(true);\n        }}\n        onManyCreate={() => {\n          handleManyModalVisible(true);\n        }}\n      />\n      {createManyModalVisible && (\n        <ModalForm\n          title=\"JSON批量新增\"\n          width=\"800px\"\n          layout={'horizontal'}\n          visible={createManyModalVisible}\n          onVisibleChange={handleManyModalVisible}\n          onFinish={async (data: any) => {\n            const value = JSON.parse(data.content);\n            for (let i = 0; i < value.length; i++) {\n              const item = value[i];\n              const success = await handleAdd(item as TableListItem);\n              if (success) {\n                handleManyModalVisible(false);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              }\n            }\n          }}\n        >\n          <ProFormTextArea\n            name=\"content\"\n            placeholder=\"请输入JSON数据\"\n            colProps={{ span: 24 }}\n            allowClear\n          />\n        </ModalForm>\n      )}\n      {createModalVisible && templateData && (\n        <CreatePart\n          template={templateData}\n          onVisibleChange={handleModalVisible}\n          onFinish={() => {\n            handleModalVisible(false);\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }}\n        />\n      )}\n      {updateModalVisible && templateData && (\n        <UpdatePart\n          template={templateData}\n          data={currentRow}\n          onVisibleChange={handleUpdateModalVisible}\n          onFinish={() => {\n            handleUpdateModalVisible(false);\n            setCurrentRow(undefined);\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }}\n        />\n      )}\n      {showDetail && templateData && (\n        <SliderPart\n          template={templateData}\n          data={currentRow}\n          onClose={() => {\n            setCurrentRow(undefined);\n            setShowDetail(false);\n          }}\n        />\n      )}\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n","var map = {\n\t\"./backend/1.json\": 46753,\n\t\"./backend/2.json\": 77714,\n\t\"./backend/3.json\": 66356,\n\t\"./backend/4.json\": 75058,\n\t\"./backend/5.json\": 35734,\n\t\"./backend/6.json\": 32213,\n\t\"./backend/7.json\": 439,\n\t\"./backend/8.json\": 69935,\n\t\"./backend/backend1data.json\": 45647,\n\t\"./tab/1.json\": 7102,\n\t\"./tab/2.json\": 4371,\n\t\"./tab/3.json\": 39255,\n\t\"./tab/4.json\": 62703,\n\t\"./tab/5.json\": 86570,\n\t\"./tab/6.json\": 47714,\n\t\"./tab/7.json\": 82759,\n\t\"./tab/8.json\": 34768,\n\t\"./tab/backend1data.json\": 75441,\n\t\"./template/1.json\": 82734,\n\t\"./template/2.json\": 67029,\n\t\"./template/3.json\": 55893,\n\t\"./template/4.json\": 44109,\n\t\"./template/5.json\": 26843,\n\t\"./template/6.json\": 17859,\n\t\"./template/7.json\": 59774,\n\t\"./template/8.json\": 58843,\n\t\"./template/template1data.json\": 43465\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7372;"],"sourceRoot":""}