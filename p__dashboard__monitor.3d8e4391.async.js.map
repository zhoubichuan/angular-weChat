{"version":3,"sources":["webpack://ant-design-pro/./src/pages/dashboard/monitor/components/ActiveChart/index.less","webpack://ant-design-pro/./src/pages/dashboard/monitor/style.less","webpack://ant-design-pro/./src/pages/dashboard/monitor/components/Map/index.tsx","webpack://ant-design-pro/./src/pages/dashboard/monitor/components/ActiveChart/index.tsx","webpack://ant-design-pro/./src/pages/dashboard/monitor/index.tsx"],"names":["colors","Map","state","data","grid","loading","Promise","all","fetch","then","d","json","geoData","gridData","setState","center","pitch","style","zoom","position","width","height","transforms","type","size","field","method","values","coverage","opacity","autoFit","color","option","v","strokeOpacity","strokeWidth","React","val","activeData","i","push","x","fixedZero","y","Math","floor","random","ActiveChart","getActiveData","timer","undefined","requestRef","loopData","requestAnimationFrame","window","setTimeout","clearTimeout","cancelAnimationFrame","styles","marginTop","sort","length","Component","Countdown","deadline","Date","now","Monitor","useRequest","queryTags","wordCloudData","list","map","item","id","uniqueId","word","name","weight","value","marginBottom","numeral","format","textAlign","visible","text","padding","overflow","fontSize","formatter","toFixed"],"mappings":"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","file":"p__dashboard__monitor.3d8e4391.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeChart\":\"activeChart___15gpK\",\"activeChartGrid\":\"activeChartGrid___3PL4c\",\"activeChartLegend\":\"activeChartLegend___2Ieyc\",\"dashedLine\":\"dashedLine___2fgZX\",\"line\":\"line___2cxqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapChart\":\"mapChart___4fQJB\",\"pieCard\":\"pieCard___1ETZj\"};","import * as React from 'react';\nimport { HeatmapLayer, MapboxScene, PointLayer } from '@antv/l7-react';\nimport { PageLoading } from '@ant-design/pro-layout';\n\nconst colors = ['#eff3ff', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#084594'];\nexport default class Map extends React.Component {\n  state = {\n    data: null,\n    grid: null,\n    loading: false,\n  };\n\n  public async componentDidMount() {\n    const [geoData, gridData] = await Promise.all([\n      fetch(\n        'https://gw.alipayobjects.com/os/bmw-prod/c5dba875-b6ea-4e88-b778-66a862906c93.json',\n      ).then((d) => d.json()),\n      fetch(\n        'https://gw.alipayobjects.com/os/bmw-prod/8990e8b4-c58e-419b-afb9-8ea3daff2dd1.json',\n      ).then((d) => d.json()),\n    ]);\n    this.setState({\n      data: geoData,\n      grid: gridData,\n      loading: true,\n    });\n  }\n\n  public render() {\n    const { data, grid, loading } = this.state;\n    return loading === false ? (\n      <PageLoading />\n    ) : (\n      <MapboxScene\n        map={{\n          center: [110.19382669582967, 50.258134],\n          pitch: 0,\n          style: 'blank',\n          zoom: 1,\n        }}\n        style={{\n          position: 'relative',\n          width: '100%',\n          height: '452px',\n        }}\n      >\n        {grid && (\n          <HeatmapLayer\n            key=\"1\"\n            source={{\n              data: grid,\n              transforms: [\n                {\n                  type: 'hexagon',\n                  size: 800000,\n                  field: 'capacity',\n                  method: 'sum',\n                },\n              ],\n            }}\n            color={{\n              values: '#ddd',\n            }}\n            shape={{\n              values: 'hexagon',\n            }}\n            style={{\n              coverage: 0.7,\n              opacity: 0.8,\n            }}\n          />\n        )}\n        {data && [\n          <PointLayer\n            key=\"2\"\n            options={{\n              autoFit: true,\n            }}\n            source={{\n              data,\n            }}\n            scale={{\n              values: {\n                color: {\n                  field: 'cum_conf',\n                  type: 'quantile',\n                },\n                size: {\n                  field: 'cum_conf',\n                  type: 'log',\n                },\n              },\n            }}\n            color={{\n              field: 'cum_conf',\n              values: colors,\n            }}\n            shape={{\n              values: 'circle',\n            }}\n            active={{\n              option: {\n                color: '#0c2c84',\n              },\n            }}\n            size={{\n              field: 'cum_conf',\n              values: [0, 30],\n            }}\n            style={{\n              opacity: 0.8,\n            }}\n          />,\n          <PointLayer\n            key=\"5\"\n            source={{\n              data,\n            }}\n            color={{\n              values: '#fff',\n            }}\n            shape={{\n              field: 'Short_Name_ZH',\n              values: 'text',\n            }}\n            filter={{\n              field: 'cum_conf',\n              values: (v) => {\n                return v > 2000;\n              },\n            }}\n            size={{\n              values: 12,\n            }}\n            style={{\n              opacity: 1,\n              strokeOpacity: 1,\n              strokeWidth: 0,\n            }}\n          />,\n        ]}\n      </MapboxScene>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { TinyArea } from '@ant-design/charts';\n\nimport { Statistic } from 'antd';\nimport styles from './index.less';\n\nfunction fixedZero(val: number) {\n  return val * 1 < 10 ? `0${val}` : val;\n}\n\nfunction getActiveData() {\n  const activeData = [];\n  for (let i = 0; i < 24; i += 1) {\n    activeData.push({\n      x: `${fixedZero(i)}:00`,\n      y: Math.floor(Math.random() * 200) + i * 50,\n    });\n  }\n  return activeData;\n}\n\nexport default class ActiveChart extends Component {\n  state = {\n    activeData: getActiveData(),\n  };\n\n  timer: number | undefined = undefined;\n\n  requestRef: number | undefined = undefined;\n\n  componentDidMount() {\n    this.loopData();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n    if (this.requestRef) {\n      cancelAnimationFrame(this.requestRef);\n    }\n  }\n\n  loopData = () => {\n    this.requestRef = requestAnimationFrame(() => {\n      this.timer = window.setTimeout(() => {\n        this.setState(\n          {\n            activeData: getActiveData(),\n          },\n          () => {\n            this.loopData();\n          },\n        );\n      }, 1000);\n    });\n  };\n\n  render() {\n    const { activeData = [] } = this.state;\n\n    return (\n      <div className={styles.activeChart}>\n        <Statistic title=\"目标评估\" value=\"有望达到预期\" />\n        <div style={{ marginTop: 32 }}>\n          <TinyArea data={activeData} xField=\"x\" forceFit yField=\"y\" height={84} />\n        </div>\n        {activeData && (\n          <div>\n            <div className={styles.activeChartGrid}>\n              <p>{[...activeData].sort()[activeData.length - 1].y + 200} 亿元</p>\n              <p>{[...activeData].sort()[Math.floor(activeData.length / 2)].y} 亿元</p>\n            </div>\n            <div className={styles.dashedLine}>\n              <div className={styles.line} />\n            </div>\n            <div className={styles.dashedLine}>\n              <div className={styles.line} />\n            </div>\n          </div>\n        )}\n        {activeData && (\n          <div className={styles.activeChartLegend}>\n            <span>00:00</span>\n            <span>{activeData[Math.floor(activeData.length / 2)].x}</span>\n            <span>{activeData[activeData.length - 1].x}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { Card, Col, Row, Statistic } from 'antd';\nimport { useRequest } from 'umi';\nimport type { FC } from 'react';\nimport { uniqueId } from 'lodash';\nimport { Gauge, WordCloud, Liquid, RingProgress } from '@ant-design/charts';\nimport type { WordCloudData } from '@antv/g2plot/esm/plots/word-cloud/layer';\n\nimport { GridContent } from '@ant-design/pro-layout';\nimport numeral from 'numeral';\nimport Map from './components/Map';\nimport ActiveChart from './components/ActiveChart';\nimport { queryTags } from './service';\nimport styles from './style.less';\n\nconst { Countdown } = Statistic;\n\nconst deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 30; // Moment is also OK\n\nconst Monitor: FC = () => {\n  const { loading, data } = useRequest(queryTags);\n\n  const wordCloudData: WordCloudData[] = (data?.list || []).map((item) => {\n    return {\n      id: +uniqueId(),\n      word: item.name,\n      weight: item.value,\n    };\n  });\n\n  return (\n    <GridContent>\n      <>\n        <Row gutter={24}>\n          <Col xl={18} lg={24} md={24} sm={24} xs={24} style={{ marginBottom: 24 }}>\n            <Card title=\"活动实时交易情况\" bordered={false}>\n              <Row>\n                <Col md={6} sm={12} xs={24}>\n                  <Statistic\n                    title=\"今日交易总额\"\n                    suffix=\"元\"\n                    value={numeral(124543233).format('0,0')}\n                  />\n                </Col>\n                <Col md={6} sm={12} xs={24}>\n                  <Statistic title=\"销售目标完成率\" value=\"92%\" />\n                </Col>\n                <Col md={6} sm={12} xs={24}>\n                  <Countdown title=\"活动剩余时间\" value={deadline} format=\"HH:mm:ss:SSS\" />\n                </Col>\n                <Col md={6} sm={12} xs={24}>\n                  <Statistic title=\"每秒交易总额\" suffix=\"元\" value={numeral(234).format('0,0')} />\n                </Col>\n              </Row>\n              <div className={styles.mapChart}>\n                <Map />\n              </div>\n            </Card>\n          </Col>\n          <Col xl={6} lg={24} md={24} sm={24} xs={24}>\n            <Card title=\"活动情况预测\" style={{ marginBottom: 24 }} bordered={false}>\n              <ActiveChart />\n            </Card>\n            <Card\n              title=\"券核效率\"\n              style={{ marginBottom: 24 }}\n              bodyStyle={{ textAlign: 'center' }}\n              bordered={false}\n            >\n              <Gauge\n                height={180}\n                min={0}\n                max={100}\n                forceFit\n                value={87}\n                range={[0, 25, 50, 75, 100]}\n                statistic={{\n                  visible: true,\n                  text: '优',\n                  color: '#30bf78',\n                }}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={24}>\n          <Col xl={12} lg={24} sm={24} xs={24} style={{ marginBottom: 24 }}>\n            <Card title=\"各品类占比\" bordered={false} className={styles.pieCard}>\n              <Row style={{ padding: '16px 0' }}>\n                <Col span={8}>\n                  <RingProgress forceFit height={128} percent={0.28} />\n                  {/* <Pie\n                    animate={false}\n                    percent={28}\n                    title=\"中式快餐\"\n                    total=\"28%\"\n                    height={128}\n                    lineWidth={2}\n                  /> */}\n                </Col>\n                <Col span={8}>\n                  <RingProgress color=\"#5DDECF\" forceFit height={128} percent={0.22} />\n                </Col>\n                <Col span={8}>\n                  <RingProgress color=\"#2FC25B\" forceFit height={128} percent={0.32} />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <Col xl={6} lg={12} sm={24} xs={24} style={{ marginBottom: 24 }}>\n            <Card\n              title=\"热门搜索\"\n              loading={loading}\n              bordered={false}\n              bodyStyle={{ overflow: 'hidden' }}\n            >\n              <WordCloud\n                data={wordCloudData}\n                forceFit\n                height={162}\n                wordStyle={{\n                  fontSize: [10, 20],\n                }}\n                shape=\"triangle\"\n              />\n              {/* <TagCloud data={data?.list || []} height={161} /> */}\n            </Card>\n          </Col>\n          <Col xl={6} lg={12} sm={24} xs={24} style={{ marginBottom: 24 }}>\n            <Card\n              title=\"资源剩余\"\n              bodyStyle={{ textAlign: 'center', fontSize: 0 }}\n              bordered={false}\n            >\n              <Liquid\n                height={161}\n                min={0}\n                max={10000}\n                value={5639}\n                forceFit\n                padding={[0, 0, 0, 0]}\n                statistic={{\n                  formatter: (value) => `${((100 * value) / 10000).toFixed(1)}%`,\n                }}\n              />\n            </Card>\n          </Col>\n        </Row>\n      </>\n    </GridContent>\n  );\n};\n\nexport default Monitor;\n"],"sourceRoot":""}