{"version":3,"sources":["webpack://ant-design-pro/./src/pages/list/list/index.less","webpack://ant-design-pro/./src/pages/list/list/SliderPart.tsx","webpack://ant-design-pro/./src/pages/list/list/service.ts","webpack://ant-design-pro/./src/pages/list/list/UpdatePart.tsx","webpack://ant-design-pro/./src/pages/list/list/CreatePart.tsx","webpack://ant-design-pro/./src/pages/list/list/TablePart.tsx","webpack://ant-design-pro/./src/pages/list/list/index.tsx","webpack://ant-design-pro//home/runner/work/antdpro-demo/antdpro-demo/src/pages/list|sync|/^\\.\\/.*\\.json$/"],"names":["SliderPart","props","data","template","onClose","descriptions","filter","item","JSON","stringify","view","map","width","ellipsis","rest","render","text","type","Array","isArray","i","includes","objectFit","maxHeight","display","whiteSpace","moment","fromNow","id","d","key","request","method","params","options","location","pathname","replace","responseType","UpdatePart","onVisibleChange","onFinish","useState","createModalVisible","handleModalVisible","handleEdit","fields","hide","updateList","formItemLayout","labelCol","xs","span","sm","wrapperCol","value","success","classNames","styles","o","edit","form","title","dataIndex","CreatePart","handleAdd","addList","create","TablePart","forwardRef","ref","actionRef","useRef","selectedRowsState","setSelectedRows","onViewDetail","onEdit","onCreate","onManyCreate","XLSX","require","handleExport","importList","handleDelete","selectedRows","removeList","row","uploadprops","accept","name","headers","authorization","showUploadList","beforeUpload","file","fileList","rABS","f","reader","FileReader","onload","e","dataResult","target","result","Uint8Array","workbook","read","firstWorksheet","Sheets","SheetNames","jsonArr","utils","sheet_to_json","header","readAsBinaryString","readAsArrayBuffer","columns","fixed","align","hideInSearch","hideInDescriptions","dom","entity","sort","a","b","search","hideInTable","table","defaultSortOrder","sorter","renderFormItem","Set","label","slice","height","find","valueType","_","record","copyParams","forEach","field","current","reload","obj","content","okText","cancelText","onOk","useImperativeHandle","x","y","document","body","clientHeight","labelWidth","optionRender","searchConfig","formProps","length","exportList","res","blob","Blob","downloadElement","createElement","href","window","URL","createObjectURL","download","decodeURI","split","appendChild","click","removeChild","revokeObjectURL","requestList","onChange","density","fullScreen","setting","showQuickJumper","pageSizeOptions","defaultPageSize","TableList","useLocation","useParams","createManyModalVisible","handleManyModalVisible","updateModalVisible","handleUpdateModalVisible","currentRow","setCurrentRow","tabActiveKey","setTabActiveKey","tabs","setTabs","templateData","setTemplateData","setOptions","showDetail","setShowDetail","getTemplateData","getTemplate","Object","keys","parse","requestTabs","tabsData","pageSize","handleOnSearch","useEffect","history","ghost","tab","reverse","undefined"],"mappings":"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","file":"p__list__list.f69e50e8.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table-part\":\"table-part___IbfjC\",\"dialog-part\":\"dialog-part___1Req7\"};","import type { ProDescriptionsItemProps } from '@ant-design/pro-descriptions';\nimport ProDescriptions from '@ant-design/pro-descriptions';\nimport { Drawer } from 'antd';\nimport React from 'react';\nimport { CloseOutlined } from '@ant-design/icons';\nimport type { ProColumns } from '@ant-design/pro-table';\nimport { Image } from 'antd';\nimport moment from 'moment';\nimport type { TableListItem } from './data';\nexport type SliderPartProps = {\n  onClose?: (e?: any) => void;\n  data: any;\n  template: any;\n};\nconst SliderPart: React.FC<SliderPartProps> = (props) => {\n  const { data, template = [], onClose } = props;\n  const descriptions: ProColumns<TableListItem>[] = template\n    .filter((item: any) => JSON.stringify(item.view) !== '{}')\n    .map((item: any) => {\n      const { width, view, ellipsis, ...rest } = item;\n      return {\n        ...rest,\n        render: (text: any) => {\n          if (item.view && item.view.type === 'image') {\n            if (Array.isArray(text)) {\n              return text.map((i: any) => {\n                if (i.includes('.mp4')) {\n                  return (\n                    <video\n                      controls\n                      style={{ objectFit: 'contain', maxHeight: '300px', display: 'inline-block' }}\n                    >\n                      <source src={i} type=\"video/mp4\" />\n                    </video>\n                  );\n                } else {\n                  return <Image style={{ objectFit: 'contain', maxHeight: '300px' }} src={i} />;\n                }\n              });\n            } else {\n              if (text.includes('.mp4')) {\n                return <video style={{ objectFit: 'contain', maxHeight: '300px' }} src={text} />;\n              } else {\n                return <Image style={{ objectFit: 'contain', maxHeight: '300px' }} src={text} />;\n              }\n            }\n          }\n          if (item.view && item.view.type === 'video') {\n            if (Array.isArray(text)) {\n              return text.map((i: any) => <video height={300} src={i} />);\n            } else {\n              return <video height={300} src={text} />;\n            }\n          }\n          if (item.view && item.view.type === 'time') {\n            return <div style={{ whiteSpace: 'pre-line' }}>{moment(text).fromNow()}</div>;\n          }\n          return (\n            <div style={{ whiteSpace: 'pre-line' }}>\n              {typeof text === 'string' ? text : JSON.stringify(text)}\n            </div>\n          );\n        },\n      };\n    });\n\n  return (\n    <Drawer\n      title={data[0]?.id}\n      destroyOnClose\n      closable={true}\n      closeIcon={<CloseOutlined />}\n      width={'80%'}\n      open={true}\n      onClose={onClose}\n    >\n      {Array.isArray(data) &&\n        data.map((d) => (\n          <ProDescriptions<TableListItem>\n            column={2}\n            request={async () => ({\n              data: d || {},\n            })}\n            params={{\n              id: d?.id,\n            }}\n            columns={descriptions as ProDescriptionsItemProps<TableListItem>[]}\n          />\n        ))}\n    </Drawer>\n  );\n};\n\nexport default SliderPart;\n","import { request } from 'umi';\n\nimport { TableListItem } from './data';\nexport async function getTemplate(key: string, type: string) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/template/' + key, {\n    method: 'GET',\n    params: {\n      type: type,\n    },\n  });\n}\nexport async function requestList(\n  params: {\n    current?: number;\n    pageSize?: number;\n  },\n  options?: { [key: string]: any },\n) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'GET',\n    params: {\n      ...params,\n    },\n    ...(options || {}),\n  });\n}\nexport async function requestTabs(\n  params: {\n    current?: number;\n    pageSize?: number;\n  },\n  options?: {},\n) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/tab/1', {\n    method: 'GET',\n    params: {\n      ...params,\n    },\n    ...(options || {}),\n  });\n}\nexport async function updateList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'PUT',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function addList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'POST',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function removeList(options?: { [key: string]: any }) {\n  return request<Record<string, any>>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'DELETE',\n    data: { ...(options || {}) },\n  });\n}\nexport async function importList(options?: { [key: string]: any }) {\n  return request<TableListItem>(\n    '/api' + location.pathname.replace('/antdpro-demo', '') + '/import',\n    {\n      method: 'POST',\n      data: options,\n    },\n  );\n}\nexport async function exportList(options?: { [key: string]: any }) {\n  return request<TableListItem>(\n    '/api' + location.pathname.replace('/antdpro-demo', '') + '/export',\n    {\n      method: 'POST',\n      responseType: 'blob',\n      data: options,\n    },\n  );\n}\n","import { message } from 'antd';\nimport React, { useState } from 'react';\nimport {\n  ModalForm,\n  ProFormText,\n  ProFormTextArea,\n  ProFormSwitch,\n  ProFormSelect,\n  ProFormRadio,\n} from '@ant-design/pro-form';\nimport { updateList } from './service';\nimport classNames from 'classnames';\nimport styles from './index.less';\nimport type { TableListItem } from './data';\nexport type UpdatePartProps = {\n  onVisibleChange: (e?: any) => void;\n  onFinish: (e?: any) => void;\n  data: any;\n  template: any;\n};\nconst UpdatePart: React.FC<UpdatePartProps> = (props) => {\n  const { data, template, onVisibleChange, onFinish } = props;\n  const [createModalVisible, handleModalVisible] = useState<boolean>(true);\n  const handleEdit = async (fields: TableListItem) => {\n    const hide = message.loading('正在配置');\n    try {\n      await updateList({ ...fields });\n      hide();\n      message.success('修改成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('修改失败！');\n      return false;\n    }\n  };\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 3 },\n      sm: { span: 4 },\n    },\n    wrapperCol: {\n      xs: { span: 21 },\n      sm: { span: 20 },\n    },\n  };\n  return (\n    <ModalForm\n      {...formItemLayout}\n      title=\"编辑\"\n      width=\"800px\"\n      layout={'horizontal'}\n      visible={createModalVisible}\n      onVisibleChange={onVisibleChange}\n      onFinish={async (value) => {\n        const success = await handleEdit(value as TableListItem);\n        if (success) {\n          onFinish();\n        }\n      }}\n      initialValues={data}\n    >\n      <div className={classNames('dialog-part', styles['dialog-part'])}>\n        {template\n          .filter((o: any) => o.edit && JSON.stringify(o.edit) !== '{}')\n          .map((item: any) => {\n            let form = <ProFormText {...item.edit} label={item.title} name={item.dataIndex} />;\n            switch (item.edit.type) {\n              case 'input':\n                form = <ProFormText {...item.edit} label={item.title} name={item.dataIndex} />;\n                break;\n              case 'textArea':\n                form = <ProFormTextArea {...item.edit} label={item.title} name={item.dataIndex} />;\n                break;\n              case 'select':\n                form = <ProFormSelect {...item.edit} label={item.title} name={item.dataIndex} />;\n                break;\n              case 'radio':\n                form = (\n                  <ProFormRadio.Group {...item.edit} label={item.title} name={item.dataIndex} />\n                );\n                break;\n              case 'switch':\n                form = <ProFormSwitch {...item.edit} label={item.title} name={item.dataIndex} />;\n                break;\n                // case 'image':\n                //   form = (\n                //     <ProFormUploadButton\n                //       fieldProps={{\n                //         name: 'file',\n                //         listType: 'picture-card',\n                //       }}\n                //       action=\"/upload.do\"\n                //       {...item.create}\n                //       label={item.title}\n                //       name={item.dataIndex}\n                //     />\n                //   );\n                break;\n            }\n            return form;\n          })}\n      </div>\n    </ModalForm>\n  );\n};\n\nexport default UpdatePart;\n","import { message } from 'antd';\nimport React, { useState } from 'react';\nimport {\n  ModalForm,\n  ProFormText,\n  ProFormTextArea,\n  ProFormSwitch,\n  ProFormSelect,\n  ProFormRadio,\n} from '@ant-design/pro-form';\nimport { addList } from './service';\nimport type { TableListItem } from './data';\nimport classNames from 'classnames';\nimport styles from './index.less';\nexport type CreatePartProps = {\n  onVisibleChange: (e?: any) => void;\n  onFinish: (e?: any) => void;\n  template: any;\n};\nconst CreatePart: React.FC<CreatePartProps> = (props) => {\n  const { template = [], onVisibleChange, onFinish } = props;\n  const [createModalVisible, handleModalVisible] = useState<boolean>(true);\n  const handleAdd = async (fields: TableListItem) => {\n    const hide = message.loading('正在添加');\n    try {\n      await addList({ ...fields });\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 3 },\n      sm: { span: 4 },\n    },\n    wrapperCol: {\n      xs: { span: 21 },\n      sm: { span: 20 },\n    },\n  };\n  return (\n    <ModalForm\n      {...formItemLayout}\n      title=\"新增\"\n      width=\"800px\"\n      layout={'horizontal'}\n      visible={createModalVisible}\n      onVisibleChange={onVisibleChange}\n      onFinish={async (value) => {\n        const success = await handleAdd(value as TableListItem);\n        if (success) {\n          onFinish();\n          handleModalVisible(false);\n        }\n      }}\n    >\n      <div className={classNames('dialog-part', styles['dialog-part'])}>\n        {template\n          .filter((item: any) => item.create && JSON.stringify(item.create) !== '{}')\n          .map((item: any) => {\n            let form = <ProFormText {...item.create} label={item.title} name={item.dataIndex} />;\n            switch (item.create ? item.create.type || '' : '') {\n              case 'input':\n                form = <ProFormText {...item.create} label={item.title} name={item.dataIndex} />;\n                break;\n              case 'textArea':\n                form = (\n                  <ProFormTextArea\n                    {...item.create}\n                    label={item.title}\n                    name={item.dataIndex}\n                    colProps={{ span: 24 }}\n                  />\n                );\n                break;\n              case 'select':\n                form = <ProFormSelect {...item.create} label={item.title} name={item.dataIndex} />;\n                break;\n              case 'radio':\n                form = (\n                  <ProFormRadio.Group {...item.create} label={item.title} name={item.dataIndex} />\n                );\n                break;\n              case 'switch':\n                form = <ProFormSwitch {...item.create} label={item.title} name={item.dataIndex} />;\n              //   case 'image':\n              //     form = (\n              //       <ProFormUploadButton\n              //         fieldProps={{\n              //           name: 'file',\n              //           listType: 'picture-card',\n              //         }}\n              //         action=\"/upload.do\"\n              //         {...item.create}\n              //         label={item.title}\n              //         name={item.dataIndex}\n              //       />\n              //     );\n              //     break;\n            }\n            return form;\n          })}\n      </div>\n    </ModalForm>\n  );\n};\n\nexport default CreatePart;\n","import { PlusOutlined } from '@ant-design/icons';\nimport { Button, message, Upload, Modal, Image } from 'antd';\nimport React, { useImperativeHandle, useRef, useState, forwardRef } from 'react';\nimport ProTable from '@ant-design/pro-table';\nimport type { ProColumns, ActionType } from '@ant-design/pro-table';\nimport { ModalForm, ProFormText, ProFormTextArea, ProFormSelect } from '@ant-design/pro-form';\nimport { requestList, removeList, importList, exportList, addList } from './service';\nimport styles from './index.less';\nimport type { TableListItem, TableListPagination } from './data';\nimport moment from 'moment';\nimport classNames from 'classnames';\n\nexport type TablePartProps = {\n  actionRef: any;\n  onViewDetail: (e?: any) => void;\n  onEdit: (e?: any) => void;\n  onCreate: (e?: any) => void;\n  onManyCreate: (e?: any) => void;\n  template: any[];\n  options: string[];\n};\nconst TablePart: React.FC<TablePartProps> = forwardRef((props, ref) => {\n  const actionRef = useRef<ActionType>();\n  const [selectedRowsState, setSelectedRows] = useState<TableListItem[]>([]);\n  const { template = [], onViewDetail, onEdit, onCreate, onManyCreate, options = [] } = props;\n  const XLSX = require('xlsx');\n  const handleExport = async (fields: TableListItem[]) => {\n    const hide = message.loading('正在添加');\n    try {\n      await importList(fields);\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const handleAdd = async (fields: TableListItem) => {\n    const hide = message.loading('正在添加');\n    try {\n      await addList({ ...fields });\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const handleDelete = async (selectedRows: TableListItem[]) => {\n    const hide = message.loading('正在删除');\n    if (!selectedRows) return true;\n    try {\n      await removeList({\n        id: selectedRows.map((row) => row.id),\n      });\n      hide();\n      message.success('删除成功，即将刷新');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('删除失败，请重试');\n      return false;\n    }\n  };\n  const uploadprops = {\n    accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    name: 'file',\n    headers: {\n      authorization: 'authorization-text',\n    },\n    showUploadList: false,\n    beforeUpload: (file: any, fileList: any) => {\n      const rABS = true;\n      const f = fileList[0];\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        let dataResult = e.target.result;\n        if (!rABS) dataResult = new Uint8Array(dataResult);\n        const workbook = XLSX.read(dataResult, {\n          type: rABS ? 'binary' : 'array',\n        });\n        const firstWorksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonArr = XLSX.utils.sheet_to_json(firstWorksheet, { header: 1 });\n        handleExport(jsonArr);\n      };\n      if (rABS) reader.readAsBinaryString(f);\n      else reader.readAsArrayBuffer(f);\n      return false;\n    },\n  };\n\n  const columns: ProColumns<TableListItem>[] = [\n    {\n      title: '编号',\n      dataIndex: 'id',\n      width: 160,\n      fixed: 'left',\n      align: 'center',\n      hideInSearch: true,\n      hideInDescriptions: true,\n      render: (dom, entity) => {\n        return (\n          <a\n            onClick={() => {\n              onViewDetail(entity);\n            }}\n          >\n            {dom}\n          </a>\n        );\n      },\n    },\n    ...template\n      .sort((a, b) => a.sort - b.sort)\n      .map((item: any) => {\n        item.hideInSearch = !item.search || JSON.stringify(item.search) === '{}';\n        item.hideInTable = !item.table || JSON.stringify(item.table) === '{}';\n        return {\n          ...item,\n          defaultSortOrder: 'descend',\n          sorter: (a: any, b: any) => a[item.dataIndex] - b[item.dataIndex],\n          ...item.table,\n          renderFormItem: () => {\n            if (item.search && item.search.type === 'select') {\n              return (\n                <ProFormSelect\n                  name={item.dataIndex}\n                  options={[...new Set(options.map((o: any) => o[item.dataIndex]))].map(\n                    (name: string) => ({\n                      label: name,\n                      value: name,\n                    }),\n                  )}\n                />\n              );\n            } else {\n              return <ProFormText name={item.dataIndex} />;\n            }\n          },\n          render: (dom: any) => {\n            if (!item.hideInTable && item.table && item.table.type === 'image') {\n              if (Array.isArray(dom)) {\n                return dom.slice(0, 2).map((i: any, key) => {\n                  if (i.includes('.mp4')) {\n                    return (\n                      <video\n                        key={key}\n                        controls\n                        style={{ objectFit: 'contain', height: '100px', display: 'inline-block' }}\n                      >\n                        <source src={i} type=\"video/mp4\" />\n                      </video>\n                    );\n                  } else {\n                    return (\n                      <Image\n                        key={key}\n                        style={{ objectFit: 'contain', height: '100px', display: 'inline-block' }}\n                        src={i}\n                      />\n                    );\n                  }\n                });\n              } else {\n                return <Image height={100} src={dom} />;\n              }\n            }\n            if (!item.hideInTable && item.table && item.table.type === 'radio') {\n              return item.table.options.find((i: any) => i.value === dom)?.label;\n            }\n            if (!item.hideInTable && item.table && item.table.type === 'time') {\n              return <div style={{ whiteSpace: 'pre-line' }}>{moment(dom).fromNow()}</div>;\n            }\n            return dom;\n          },\n        };\n      }),\n    {\n      title: '操作',\n      dataIndex: 'option',\n      valueType: 'option',\n      fixed: 'right',\n      width: 160,\n      render: (_, record: any) => [\n        <a\n          key=\"add\"\n          onClick={async () => {\n            const copyParams: any = {};\n            template\n              .filter((item: any) => item.create)\n              .forEach((field: any) => {\n                if (record[field.dataIndex]) {\n                  copyParams[field.dataIndex] = record[field.dataIndex];\n                }\n              });\n            const success = await handleAdd(copyParams as TableListItem);\n            if (success) {\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n        >\n          添加\n        </a>,\n        <a\n          key=\"edit\"\n          onClick={() => {\n            const obj: any = {};\n            for (const key in record) {\n              if (typeof record[key] === 'object') {\n                obj[key] = JSON.stringify(record[key]);\n              } else {\n                obj[key] = record[key];\n              }\n            }\n            onEdit(obj);\n          }}\n        >\n          修改\n        </a>,\n        <a\n          key=\"delete\"\n          onClick={() => {\n            Modal.confirm({\n              title: '删除数据',\n              content: '确定删除该数据吗？',\n              okText: '确认',\n              cancelText: '取消',\n              onOk: async () => {\n                await handleDelete([record] as TableListItem[]);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              },\n            });\n          }}\n        >\n          删除\n        </a>,\n      ],\n    },\n  ];\n  useImperativeHandle(ref, () => ({\n    reload: () => actionRef?.current?.reload(),\n  }));\n  return (\n    <ProTable<TableListItem, TableListPagination>\n      className={classNames('table-part', styles['table-part'])}\n      sticky\n      actionRef={actionRef}\n      ghost={true}\n      rowKey=\"id\"\n      scroll={{ x: 800, y: document.body.clientHeight / 2 }}\n      search={{\n        labelWidth: 80,\n        optionRender: (searchConfig, formProps, dom) => {\n          return dom;\n        },\n      }}\n      toolBarRender={() => [\n        <Button\n          type=\"primary\"\n          key=\"primary\"\n          onClick={(): any => {\n            if (!selectedRowsState.length) {\n              return message.warning('请选择数据');\n            }\n            Modal.confirm({\n              title: '删除数据',\n              content: '确定删除该数据吗？',\n              okText: '确认',\n              cancelText: '取消',\n              onOk: async () => {\n                await handleDelete(selectedRowsState);\n                setSelectedRows([]);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              },\n            });\n          }}\n        >\n          批量删除\n        </Button>,\n        <Button\n          type=\"primary\"\n          key=\"primary\"\n          onClick={(): any => {\n            Modal.confirm({\n              title: '导出数据',\n              content: '确定导出全部数据吗？',\n              okText: '确认',\n              cancelText: '取消',\n              onOk: async () => {\n                await exportList();\n              },\n            });\n          }}\n        >\n          全部导出\n        </Button>,\n        <Button\n          type=\"primary\"\n          key=\"primary\"\n          onClick={async () => {\n            Modal.confirm({\n              title: '导出数据',\n              content: '确定导出选中数据吗？',\n              okText: '确认',\n              cancelText: '取消',\n              onOk: async () => {\n                const res: any = await exportList(selectedRowsState);\n                const blob = new Blob([res.data], {\n                  type: 'application/vnd.ms-excel;charset=utf-8',\n                });\n                const downloadElement = document.createElement('a');\n                const href = window.URL.createObjectURL(blob); //创建下载的链接\n                downloadElement.href = href;\n                downloadElement.download =\n                  decodeURI(res.headers['content-disposition'].split('filename=')[1]) || ''; //下载后文件名\n                document.body.appendChild(downloadElement);\n                downloadElement.click(); //点击下载\n                document.body.removeChild(downloadElement); //下载完成移除元素\n                window.URL.revokeObjectURL(href); //释放掉blob对象\n                setSelectedRows([]);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              },\n            });\n          }}\n        >\n          批量导出\n        </Button>,\n        <Upload\n          {...uploadprops}\n          onChange={() => {\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }}\n        >\n          <Button type=\"primary\">批量导入</Button>\n        </Upload>,\n        // <Button\n        //   type=\"primary\"\n        //   key=\"primary\"\n        //   onClick={() => {\n        //     alert('导入');\n        //   }}\n        // >\n        //   <PlusOutlined /> 导入\n        // </Button>,\n        <Button type=\"primary\" key=\"primary\" onClick={onCreate}>\n          <PlusOutlined /> 新建\n        </Button>,\n        <Button type=\"primary\" key=\"primary\" onClick={onManyCreate}>\n          <PlusOutlined /> 批量添加\n        </Button>,\n      ]}\n      request={requestList}\n      columns={columns}\n      rowSelection={{\n        onChange: (_, selectedRows) => {\n          setSelectedRows(selectedRows);\n        },\n      }}\n      options={{\n        density: false,\n        fullScreen: true,\n        reload: true,\n        setting: true,\n      }}\n      pagination={{\n        showQuickJumper: true,\n        pageSizeOptions: ['10', '20', '30', '40'],\n        defaultPageSize: 10,\n      }}\n    />\n  );\n});\n\nexport default TablePart;\n","import { message } from 'antd';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport { ModalForm, ProFormTextArea } from '@ant-design/pro-form';\nimport { requestTabs, requestList, getTemplate, addList } from './service';\nimport type { TableListItem } from './data';\nimport { history, useLocation, useParams } from 'umi';\nimport type { ActionType } from '@ant-design/pro-table';\nimport classNames from 'classnames';\nimport styles from './index.less';\nimport SliderPart from './SliderPart';\nimport UpdatePart from './UpdatePart';\nimport CreatePart from './CreatePart';\nimport TablePart from './TablePart';\nconst TableList: React.FC = () => {\n  const { pathname }: any = useLocation();\n  const params: any = useParams();\n  const [createManyModalVisible, handleManyModalVisible] = useState<boolean>(false);\n  const [createModalVisible, handleModalVisible] = useState<boolean>(false);\n  const [updateModalVisible, handleUpdateModalVisible] = useState<boolean>(false);\n  const actionRef = useRef<ActionType>(null);\n  const [currentRow, setCurrentRow] = useState<TableListItem>();\n  const [tabActiveKey, setTabActiveKey] = useState<any>(\n    pathname.split('/')[pathname.split('/').length - 1],\n  );\n  const [tabs, setTabs] = useState<any>([]);\n  const [templateData, setTemplateData] = useState<any>([]);\n  const [options, setOptions] = useState<string[]>([]);\n  const [showDetail, setShowDetail] = useState<boolean>(false);\n  const handleAdd = async (fields: TableListItem) => {\n    const hide = message.loading('正在添加');\n    try {\n      await addList({ ...fields });\n      hide();\n      message.success('添加成功');\n      return true;\n    } catch (error) {\n      hide();\n      message.error('添加失败！');\n      return false;\n    }\n  };\n  const getTemplateData = async (key: string) => {\n    let template: any = [];\n    if (\n      pathname.includes('template') ||\n      pathname.includes('backend') ||\n      pathname.includes('tab') ||\n      pathname.includes('page')\n    ) {\n      template = await require(`../${pathname.split('/')[2]}/${key}.json`);\n    } else {\n      const result = await getTemplate(key, pathname.split('/')[2]);\n      template = result.data;\n    }\n    for (let i = 0; i < template.length; i++) {\n      const item = template[i];\n      Object.keys(item).forEach((field: any) => {\n        if (typeof item[field] === 'string') {\n          if (item[field].includes('{}')) {\n            template[i][field] = false;\n          } else if (item[field].includes('{')) {\n            template[i][field] = JSON.parse(item[field]);\n          }\n        }\n      });\n    }\n    setTemplateData(template);\n    const tabsData = await requestTabs({});\n    setTabs(tabsData.data);\n    if (params?.id) {\n      const result: any = await requestList({ current: 1, pageSize: 1 }, { id: params.id });\n      setOptions(result.data);\n    }\n    setTabActiveKey(key);\n  };\n  const handleOnSearch = async () => {\n    const { data }: any = await requestList({ current: 1 });\n    setOptions(data);\n  };\n  useEffect(() => {\n    getTemplateData(params?.id || 1);\n    handleOnSearch();\n  }, []);\n  useEffect(() => {\n    getTemplateData(params.id);\n    handleOnSearch();\n  }, [params.id]);\n\n  return (\n    <PageContainer\n      className={classNames('container-part', styles['container-part'])}\n      onTabChange={async (key: string) => {\n        // await getTemplateData(key);\n        if (actionRef.current) {\n          actionRef.current.reload();\n        }\n        history.push(pathname.slice(0, -1) + key);\n      }}\n      header={{\n        title: false,\n        ghost: true,\n      }}\n      tabList={\n        pathname.includes('tab') || pathname.includes('page')\n          ? [{ tab: 'tab', key: 1 }]\n          : tabs\n              .reverse((a: any, b: any) => a.type - b.type)\n              .map((item: any) => ({ tab: item.name, key: item.type }))\n      }\n      tabActiveKey={tabActiveKey}\n    >\n      <TablePart\n        ref={actionRef}\n        options={options}\n        template={templateData}\n        onViewDetail={(entity) => {\n          setCurrentRow(entity);\n          setShowDetail(true);\n        }}\n        onEdit={(obj) => {\n          setCurrentRow(obj);\n          handleUpdateModalVisible(true);\n        }}\n        onCreate={() => {\n          handleModalVisible(true);\n        }}\n        onManyCreate={() => {\n          handleManyModalVisible(true);\n        }}\n      />\n      {createManyModalVisible && (\n        <ModalForm\n          title=\"JSON批量新增\"\n          width=\"800px\"\n          layout={'horizontal'}\n          visible={createManyModalVisible}\n          onVisibleChange={handleManyModalVisible}\n          onFinish={async (data: any) => {\n            const value = JSON.parse(data.content);\n            for (let i = 0; i < value.length; i++) {\n              const item = value[i];\n              const success = await handleAdd(item as TableListItem);\n              if (success) {\n                handleManyModalVisible(false);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              }\n            }\n          }}\n        >\n          <div className={classNames('dialog-part', styles['dialog-part'])}>\n            <ProFormTextArea\n              name=\"content\"\n              placeholder=\"请输入JSON数据\"\n              colProps={{ span: 24 }}\n              allowClear\n            />\n          </div>\n        </ModalForm>\n      )}\n      {createModalVisible && templateData && (\n        <CreatePart\n          template={templateData}\n          onVisibleChange={handleModalVisible}\n          onFinish={() => {\n            handleModalVisible(false);\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }}\n        />\n      )}\n      {updateModalVisible && templateData && (\n        <UpdatePart\n          template={templateData}\n          data={currentRow}\n          onVisibleChange={handleUpdateModalVisible}\n          onFinish={() => {\n            handleUpdateModalVisible(false);\n            setCurrentRow(undefined);\n            if (actionRef.current) {\n              actionRef.current.reload();\n            }\n          }}\n        />\n      )}\n      {showDetail && templateData && (\n        <SliderPart\n          template={templateData}\n          data={[currentRow]}\n          onClose={() => {\n            setCurrentRow(undefined);\n            setShowDetail(false);\n          }}\n        />\n      )}\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n","var map = {\n\t\"./backend/1.json\": 46753,\n\t\"./backend/2.json\": 77714,\n\t\"./backend/3.json\": 66356,\n\t\"./backend/4.json\": 75058,\n\t\"./backend/5.json\": 35734,\n\t\"./backend/6.json\": 32213,\n\t\"./backend/7.json\": 439,\n\t\"./backend/8.json\": 69935,\n\t\"./backend/backend1data.json\": 45647,\n\t\"./page/1.json\": 5152,\n\t\"./page/2.json\": 63399,\n\t\"./page/3.json\": 2980,\n\t\"./page/4.json\": 29265,\n\t\"./page/5.json\": 19587,\n\t\"./page/6.json\": 6772,\n\t\"./page/7.json\": 52301,\n\t\"./page/8.json\": 22585,\n\t\"./page/backend1data.json\": 40372,\n\t\"./tab/1.json\": 7102,\n\t\"./tab/2.json\": 4371,\n\t\"./tab/3.json\": 39255,\n\t\"./tab/4.json\": 62703,\n\t\"./tab/5.json\": 86570,\n\t\"./tab/6.json\": 47714,\n\t\"./tab/7.json\": 82759,\n\t\"./tab/8.json\": 34768,\n\t\"./tab/backend1data.json\": 75441,\n\t\"./template/1.json\": 82734,\n\t\"./template/2.json\": 67029,\n\t\"./template/3.json\": 55893,\n\t\"./template/4.json\": 44109,\n\t\"./template/5.json\": 26843,\n\t\"./template/6.json\": 17859,\n\t\"./template/7.json\": 59774,\n\t\"./template/8.json\": 58843,\n\t\"./template/template1data.json\": 43465\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7372;"],"sourceRoot":""}