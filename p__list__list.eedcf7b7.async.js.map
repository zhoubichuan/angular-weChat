{"version":3,"sources":["webpack://ant-design-pro/./src/pages/list/list/index.less","webpack://ant-design-pro/./src/pages/list/list/service.ts","webpack://ant-design-pro/./src/pages/list/list/index.tsx","webpack://ant-design-pro//home/runner/work/antdpro-demo/antdpro-demo/src/pages/list|sync|/^\\.\\/.*\\.json$/"],"names":["key","type","request","method","params","current","pageSize","options","location","pathname","replace","data","XLSX","require","handleExport","fields","hide","exportList","uploadprops","accept","name","headers","authorization","showUploadList","beforeUpload","file","fileList","rABS","f","reader","FileReader","onload","e","dataResult","target","result","Uint8Array","workbook","read","firstWorksheet","Sheets","SheetNames","jsonArr","utils","sheet_to_json","header","readAsBinaryString","readAsArrayBuffer","handleAdd","addList","handleEdit","updateList","handleDelete","selectedRows","removeList","id","map","row","formItemLayout","labelCol","xs","span","sm","wrapperCol","TableList","path","useState","createManyModalVisible","handleManyModalVisible","createModalVisible","handleModalVisible","updateModalVisible","handleUpdateModalVisible","showDetail","setShowDetail","actionRef","useRef","currentRow","setCurrentRow","split","length","tabActiveKey","setTabActiveKey","selectedRowsState","setSelectedRows","useParams","templateData","setTemplateData","getTemplateData","template","includes","getTemplate","i","item","Object","keys","forEach","field","JSON","parse","useEffect","handleOnTabChange","reload","history","slice","columns","title","dataIndex","width","fixed","align","hideInSearch","hideInDescriptions","render","dom","entity","table","renderFormItem","search","hideInTable","Array","isArray","thumbUrl","whiteSpace","moment","fromNow","find","o","value","valueType","_","record","copyParams","filter","create","success","content","okText","cancelText","onOk","descriptions","view","ellipsis","rest","text","color","classNames","styles","ghost","tab","labelWidth","list","onChange","density","fullScreen","setting","showQuickJumper","pageSizeOptions","defaultPageSize","form","listType","undefined","edit"],"mappings":"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","file":"p__list__list.eedcf7b7.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pro-container\":\"pro-container___3FS7U\"};","// @ts-ignore\n/* eslint-disable */\nimport { request } from 'umi';\nimport { TableListItem } from './data';\nexport async function getTemplate(key: string, type: string) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/template/' + key, {\n    method: 'GET',\n    params: {\n      current: '1',\n      pageSize: '20',\n      type: type,\n    },\n  });\n}\nexport async function list(\n  params: {\n    current?: number;\n    pageSize?: number;\n  },\n  options?: { [key: string]: any },\n) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'GET',\n    params: {\n      ...params,\n    },\n    ...(options || {}),\n  });\n}\n\nexport async function updateList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'PUT',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function addList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'POST',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function removeList(options?: { [key: string]: any }) {\n  return request<Record<string, any>>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'DELETE',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function exportList(options?: { [key: string]: any }) {\n  return request<TableListItem>(\n    '/api' + location.pathname.replace('/antdpro-demo', '') + '/export',\n    {\n      method: 'POST',\n      data: options,\n    },\n  );\n}\n","import { PlusOutlined, CloseOutlined } from '@ant-design/icons';\nimport { Button, message, Drawer, Upload, Image, Modal, Select } from 'antd';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport type { ProColumns, ActionType } from '@ant-design/pro-table';\nimport ProTable from '@ant-design/pro-table';\nimport {\n  ModalForm,\n  ProFormText,\n  ProFormTextArea,\n  ProFormSwitch,\n  ProFormSelect,\n  ProFormRadio,\n  ProFormUploadButton,\n} from '@ant-design/pro-form';\nimport type { ProDescriptionsItemProps } from '@ant-design/pro-descriptions';\nimport ProDescriptions from '@ant-design/pro-descriptions';\nimport { list, addList, updateList, removeList, exportList, getTemplate } from './service';\nimport type { TableListItem, TableListPagination } from './data';\nimport { useParams } from 'react-router';\nimport { history } from 'umi';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport styles from './index.less';\nconst XLSX = require('xlsx');\nconst handleExport = async (fields: TableListItem[]) => {\n  const hide = message.loading('正在添加');\n  try {\n    await exportList(fields);\n    hide();\n    message.success('添加成功');\n    return true;\n  } catch (error) {\n    hide();\n    message.error('添加失败！');\n    return false;\n  }\n};\nconst uploadprops = {\n  // 这里我们只接受excel2007以后版本的文件，accept就是指定文件选择框的文件类型\n  accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n  name: 'file',\n  headers: {\n    authorization: 'authorization-text',\n  },\n  showUploadList: false,\n  // 把excel的处理放在beforeUpload事件，否则要把文件上传到通过action指定的地址去后台处理\n  // 这里我们没有指定action地址，因为没有传到后台\n  beforeUpload: (file: any, fileList: any) => {\n    const rABS = true;\n    const f = fileList[0];\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      let dataResult = e.target.result;\n      if (!rABS) dataResult = new Uint8Array(dataResult);\n      const workbook = XLSX.read(dataResult, {\n        type: rABS ? 'binary' : 'array',\n      });\n      // 假设我们的数据在第一个标签\n      const firstWorksheet = workbook.Sheets[workbook.SheetNames[0]];\n      // XLSX自带了一个工具把导入的数据转成json\n      const jsonArr = XLSX.utils.sheet_to_json(firstWorksheet, { header: 1 });\n      // 通过自定义的方法处理Json,得到Excel原始数据传给后端，后端统一处理\n      handleExport(jsonArr);\n    };\n    if (rABS) reader.readAsBinaryString(f);\n    else reader.readAsArrayBuffer(f);\n    return false;\n  },\n};\nconst handleAdd = async (fields: TableListItem) => {\n  const hide = message.loading('正在添加');\n  try {\n    await addList({ ...fields });\n    hide();\n    message.success('添加成功');\n    return true;\n  } catch (error) {\n    hide();\n    message.error('添加失败！');\n    return false;\n  }\n};\n\nconst handleEdit = async (fields: TableListItem) => {\n  const hide = message.loading('正在配置');\n  try {\n    await updateList({ ...fields });\n    hide();\n    message.success('修改成功');\n    return true;\n  } catch (error) {\n    hide();\n    message.error('修改失败！');\n    return false;\n  }\n};\n\nconst handleDelete = async (selectedRows: TableListItem[]) => {\n  const hide = message.loading('正在删除');\n  if (!selectedRows) return true;\n  try {\n    await removeList({\n      id: selectedRows.map((row) => row.id),\n    });\n    hide();\n    message.success('删除成功，即将刷新');\n    return true;\n  } catch (error) {\n    hide();\n    message.error('删除失败，请重试');\n    return false;\n  }\n};\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 3 },\n    sm: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 21 },\n    sm: { span: 20 },\n  },\n};\n\nconst TableList: React.FC = () => {\n  const path: string = location.pathname.replace('/antdpro-demo', '');\n  const [createManyModalVisible, handleManyModalVisible] = useState<boolean>(false);\n  const [createModalVisible, handleModalVisible] = useState<boolean>(false);\n  const [updateModalVisible, handleUpdateModalVisible] = useState<boolean>(false);\n  const [showDetail, setShowDetail] = useState<boolean>(false);\n  const actionRef = useRef<ActionType>();\n  const [currentRow, setCurrentRow] = useState<TableListItem>();\n  const [tabActiveKey, setTabActiveKey] = useState<any>(\n    path.split('/')[path.split('/').length - 1],\n  );\n  const [selectedRowsState, setSelectedRows] = useState<TableListItem[]>([]);\n  const params: any = useParams();\n  const [templateData, setTemplateData] = useState<any>([]);\n  const getTemplateData = async (key: string) => {\n    let template: any = [];\n    if (path.includes('template')) {\n      template = await require(`../${path.split('/')[2]}/${key}.json`);\n    } else {\n      const result = await getTemplate(key, path.split('/')[2]);\n      template = result.data;\n      for (let i = 0; i < template.length; i++) {\n        const item = template[i];\n        Object.keys(item).forEach((field: any) => {\n          if (typeof item[field] === 'string') {\n            if (item[field].includes('{}')) {\n              template[i][field] = false;\n            } else if (item[field].includes('{')) {\n              template[i][field] = JSON.parse(item[field]);\n            }\n          }\n        });\n      }\n    }\n    setTemplateData(template);\n  };\n  useEffect(() => {\n    getTemplateData(params.id);\n  }, []);\n  const handleOnTabChange = async (key: string) => {\n    await getTemplateData(key);\n    setTabActiveKey(key);\n    if (actionRef.current) {\n      actionRef.current.reload();\n    }\n    history.push(path.slice(0, -1) + key);\n  };\n  const columns: ProColumns<TableListItem>[] = [\n    {\n      title: '编号',\n      dataIndex: 'id',\n      width: 160,\n      fixed: 'left',\n      align: 'center',\n      hideInSearch: true,\n      hideInDescriptions: true,\n      render: (dom, entity) => {\n        return (\n          <a\n            onClick={() => {\n              setCurrentRow(entity);\n              setShowDetail(true);\n            }}\n          >\n            {dom}\n          </a>\n        );\n      },\n    },\n    ...templateData.map((item: any) => ({\n      ...item,\n      ...item.table,\n      renderFormItem: () => {\n        if (item.search && item.search.type === 'select') {\n          return <ProFormSelect name={item.dataIndex} options={item.search.data} />;\n        } else {\n          return <ProFormText name={item.dataIndex} />;\n        }\n      },\n      render: (dom: any) => {\n        if (!item.hideInTable && item.table && item.table.type === 'image') {\n          if (Array.isArray(dom)) {\n            return dom.map((i: any) => <Image height={100} src={i?.thumbUrl} />);\n          } else {\n            return <Image height={100} src={dom[0]?.thumbUrl} />;\n          }\n        }\n        if (!item.hideInTable && item.table && item.table.type === 'time') {\n          return <div style={{ whiteSpace: 'pre-line' }}>{moment(dom).fromNow()}</div>;\n        }\n        if (!item.hideInTable && item.table && item.table.type === 'select') {\n          return (\n            <div style={{ whiteSpace: 'pre-line' }}>\n              {item.table.data.find((o: any) => o.value === dom).name}\n            </div>\n          );\n        }\n        return dom;\n      },\n    })),\n    {\n      title: '操作',\n      dataIndex: 'option',\n      valueType: 'option',\n      fixed: 'right',\n      width: 160,\n      render: (_, record) => [\n        <a\n          key=\"add\"\n          onClick={async () => {\n            const copyParams = {};\n            templateData\n              .filter((item: any) => item.create)\n              .forEach((field: any) => {\n                if (record[field.dataIndex]) {\n                  copyParams[field.dataIndex] = record[field.dataIndex];\n                }\n              });\n            const success = await handleAdd(copyParams as TableListItem);\n            if (success) {\n              handleModalVisible(false);\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n        >\n          添加\n        </a>,\n        <a\n          key=\"edit\"\n          onClick={() => {\n            setCurrentRow(record);\n            handleUpdateModalVisible(true);\n          }}\n        >\n          修改\n        </a>,\n        <a\n          key=\"delete\"\n          onClick={() => {\n            Modal.confirm({\n              title: '删除数据',\n              content: '确定删除该数据吗？',\n              okText: '确认',\n              cancelText: '取消',\n              onOk: async () => {\n                await handleDelete([record] as TableListItem[]);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              },\n            });\n          }}\n        >\n          删除\n        </a>,\n      ],\n    },\n  ];\n  const descriptions: ProColumns<TableListItem>[] = templateData\n    .filter((item: any) => item.view)\n    .map((item: any) => {\n      const { width, view, ellipsis, ...rest } = item;\n      return {\n        ...rest,\n        render: (text: any) => {\n          if (!item.hideInTable && item.view && item.view.type === 'image') {\n            if (Array.isArray(text)) {\n              return text.map((i: any) => <Image height={300} src={i?.thumbUrl} />);\n            } else {\n              return <Image height={300} src={text[0]?.thumbUrl} />;\n            }\n          }\n          if (!item.hideInTable && item.view && item.view.type === 'time') {\n            return (\n              <div style={{ color: 'lightblue', whiteSpace: 'pre-line' }}>\n                {moment(text).fromNow()}\n              </div>\n            );\n          }\n          return <div style={{ color: 'lightblue', whiteSpace: 'pre-line' }}>{text}</div>;\n        },\n      };\n    });\n  return (\n    <PageContainer\n      className={classNames('pro-container', styles['pro-container'])}\n      onTabChange={handleOnTabChange}\n      header={{\n        title: false,\n        ghost: true,\n      }}\n      tabList={[\n        {\n          tab: '列表1',\n          key: '1',\n        },\n        {\n          tab: '列表2',\n          key: '2',\n        },\n        {\n          tab: '列表3',\n          key: '3',\n        },\n        {\n          tab: '列表4',\n          key: '4',\n        },\n        {\n          tab: '列表5',\n          key: '5',\n        },\n        {\n          tab: '列表6',\n          key: '6',\n        },\n        {\n          tab: '列表7',\n          key: '7',\n        },\n        {\n          tab: '列表8',\n          key: '8',\n        },\n      ]}\n      tabActiveKey={tabActiveKey}\n    >\n      <ProTable<TableListItem, TableListPagination>\n        sticky\n        actionRef={actionRef}\n        ghost={true}\n        rowKey=\"id\"\n        search={{\n          labelWidth: 80,\n        }}\n        toolBarRender={() => [\n          <Button\n            type=\"primary\"\n            key=\"primary\"\n            onClick={(): any => {\n              if (!selectedRowsState.length) {\n                return message.warning('请选择数据');\n              }\n              Modal.confirm({\n                title: '删除数据',\n                content: '确定删除该数据吗？',\n                okText: '确认',\n                cancelText: '取消',\n                onOk: async () => {\n                  await handleDelete(selectedRowsState);\n                  setSelectedRows([]);\n                  if (actionRef.current) {\n                    actionRef.current.reload();\n                  }\n                },\n              });\n            }}\n          >\n            批量删除\n          </Button>,\n          <Upload\n            {...uploadprops}\n            onChange={() => {\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }}\n          >\n            <Button type=\"primary\">批量导出</Button>\n          </Upload>,\n          <Upload\n            {...uploadprops}\n            onChange={() => {\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }}\n          >\n            <Button type=\"primary\">批量导入</Button>\n          </Upload>,\n          // <Button\n          //   type=\"primary\"\n          //   key=\"primary\"\n          //   onClick={() => {\n          //     alert('导入');\n          //   }}\n          // >\n          //   <PlusOutlined /> 导入\n          // </Button>,\n          <Button\n            type=\"primary\"\n            key=\"primary\"\n            onClick={() => {\n              handleModalVisible(true);\n            }}\n          >\n            <PlusOutlined /> 新建\n          </Button>,\n          <Button\n            type=\"primary\"\n            key=\"primary\"\n            onClick={() => {\n              handleManyModalVisible(true);\n            }}\n          >\n            <PlusOutlined /> 批量添加\n          </Button>,\n        ]}\n        request={list}\n        columns={columns}\n        rowSelection={{\n          onChange: (_, selectedRows) => {\n            setSelectedRows(selectedRows);\n          },\n        }}\n        options={{\n          density: false,\n          fullScreen: true,\n          reload: true,\n          setting: true,\n        }}\n        pagination={{\n          showQuickJumper: true,\n          pageSizeOptions: ['10', '20', '30', '40'],\n          defaultPageSize: 10,\n        }}\n      />\n      {createManyModalVisible && (\n        <ModalForm\n          title=\"JSON批量新增\"\n          width=\"800px\"\n          layout={'horizontal'}\n          visible={createManyModalVisible}\n          onVisibleChange={handleManyModalVisible}\n          onFinish={async (data: any) => {\n            const value = JSON.parse(data.content);\n            for (let i = 0; i < value.length; i++) {\n              const item = value[i];\n              const success = await handleAdd(item as TableListItem);\n              if (success) {\n                handleManyModalVisible(false);\n                if (actionRef.current) {\n                  actionRef.current.reload();\n                }\n              }\n            }\n          }}\n        >\n          <ProFormTextArea\n            name=\"content\"\n            placeholder=\"请输入JSON数据\"\n            colProps={{ span: 24 }}\n            allowClear\n          />\n        </ModalForm>\n      )}\n      {createModalVisible && (\n        <ModalForm\n          {...formItemLayout}\n          title=\"新增\"\n          width=\"800px\"\n          layout={'horizontal'}\n          visible={createModalVisible}\n          onVisibleChange={handleModalVisible}\n          onFinish={async (value) => {\n            const success = await handleAdd(value as TableListItem);\n            if (success) {\n              handleModalVisible(false);\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n        >\n          {templateData\n            .filter((item: any) => item.create)\n            .map((item: any) => {\n              let form = <ProFormText {...item.create} label={item.title} name={item.dataIndex} />;\n              switch (item.create ? item.create.type || '' : '') {\n                case 'input':\n                  form = <ProFormText {...item.create} label={item.title} name={item.dataIndex} />;\n                  break;\n                case 'textArea':\n                  form = (\n                    <ProFormTextArea\n                      {...item.create}\n                      label={item.title}\n                      name={item.dataIndex}\n                      colProps={{ span: 24 }}\n                    />\n                  );\n                  break;\n                case 'select':\n                  form = (\n                    <ProFormSelect {...item.create} label={item.title} name={item.dataIndex} />\n                  );\n                  break;\n                case 'radio':\n                  form = <ProFormRadio {...item.create} label={item.title} name={item.dataIndex} />;\n                  break;\n                case 'switch':\n                  form = (\n                    <ProFormSwitch {...item.create} label={item.title} name={item.dataIndex} />\n                  );\n                case 'image':\n                  form = (\n                    <ProFormUploadButton\n                      fieldProps={{\n                        name: 'file',\n                        listType: 'picture-card',\n                      }}\n                      action=\"/upload.do\"\n                      {...item.create}\n                      label={item.title}\n                      name={item.dataIndex}\n                    />\n                  );\n                  break;\n              }\n              return form;\n            })}\n        </ModalForm>\n      )}\n      {updateModalVisible && (\n        <ModalForm\n          {...formItemLayout}\n          title=\"编辑\"\n          width=\"800px\"\n          layout={'horizontal'}\n          visible={updateModalVisible}\n          onVisibleChange={handleUpdateModalVisible}\n          onFinish={async (value) => {\n            const success = await handleEdit(value as TableListItem);\n            if (success) {\n              handleUpdateModalVisible(false);\n              setCurrentRow(undefined);\n              if (actionRef.current) {\n                actionRef.current.reload();\n              }\n            }\n          }}\n          initialValues={currentRow}\n        >\n          {templateData\n            .filter((item: any) => item.edit)\n            .map((item: any) => {\n              let form = <ProFormText {...item.edit} label={item.title} name={item.dataIndex} />;\n              switch (item.edit ? item.edit.type || '' : '') {\n                case 'input':\n                  form = <ProFormText {...item.edit} label={item.title} name={item.dataIndex} />;\n                  break;\n                case 'textArea':\n                  form = (\n                    <ProFormTextArea {...item.edit} label={item.title} name={item.dataIndex} />\n                  );\n                  break;\n                case 'select':\n                  form = <ProFormSelect {...item.edit} label={item.title} name={item.dataIndex} />;\n                  break;\n                case 'radio':\n                  form = <ProFormRadio {...item.edit} label={item.title} name={item.dataIndex} />;\n                  break;\n                case 'switch':\n                  form = <ProFormSwitch {...item.edit} label={item.title} name={item.dataIndex} />;\n                  break;\n                case 'image':\n                  form = (\n                    <ProFormUploadButton\n                      fieldProps={{\n                        name: 'file',\n                        listType: 'picture-card',\n                      }}\n                      action=\"/upload.do\"\n                      {...item.create}\n                      label={item.title}\n                      name={item.dataIndex}\n                    />\n                  );\n                  break;\n              }\n              return form;\n            })}\n        </ModalForm>\n      )}\n      <Drawer\n        title={currentRow?.id}\n        destroyOnClose\n        closable={true}\n        closeIcon={<CloseOutlined />}\n        width={'80%'}\n        open={showDetail}\n        onClose={() => {\n          setCurrentRow(undefined);\n          setShowDetail(false);\n        }}\n      >\n        {currentRow?.id && (\n          <ProDescriptions<TableListItem>\n            column={2}\n            request={async () => ({\n              data: currentRow || {},\n            })}\n            params={{\n              id: currentRow?.id,\n            }}\n            columns={descriptions as ProDescriptionsItemProps<TableListItem>[]}\n          />\n        )}\n      </Drawer>\n    </PageContainer>\n  );\n};\n\nexport default TableList;\n","var map = {\n\t\"./template/1.json\": 82734,\n\t\"./template/2.json\": 67029,\n\t\"./template/3.json\": 55893,\n\t\"./template/4.json\": 44109,\n\t\"./template/5.json\": 26843,\n\t\"./template/6.json\": 17859,\n\t\"./template/7.json\": 59774,\n\t\"./template/8.json\": 58843\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7372;"],"sourceRoot":""}