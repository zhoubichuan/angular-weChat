{"version":3,"sources":["webpack://ant-design-pro/./src/pages/user/register/style.less","webpack://ant-design-pro/./src/pages/user/register/index.tsx"],"names":["FormItem","Option","InputGroup","passwordStatusMap","ok","styles","pass","poor","passwordProgressMap","Register","useState","count","setCount","visible","setVisible","prefix","setPrefix","popover","setPopover","confirmDirty","interval","form","intl","useIntl","useEffect","clearInterval","onGetCaptcha","counts","window","setInterval","getPasswordStatus","value","getFieldValue","length","useRequest","fakeRegister","manual","onSuccess","data","params","status","history","pathname","state","account","email","submitting","loading","register","run","onFinish","values","checkConfirm","_","promise","Promise","reject","resolve","checkPassword","validateFields","changePrefix","renderPasswordProgress","passwordStatus","SelectLang","localStorage","antdprourl","formatMessage","id","required","message","type","node","parentNode","padding","marginTop","width","validator","pattern"],"mappings":"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","file":"p__user__register.200a838d.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container___1Cqhv\",\"lang\":\"lang___1jfH8\",\"content\":\"content___2bfN4\",\"top\":\"top___2VoTJ\",\"header\":\"header___2DQaA\",\"logo\":\"logo___gZAM9\",\"title\":\"title___6_3G_\",\"desc\":\"desc___1AHTV\",\"main\":\"main___2kx2N\",\"password\":\"password___2JDrd\",\"getCaptcha\":\"getCaptcha___1oboe\",\"submit\":\"submit___34wM2\",\"login\":\"login___1qBuj\",\"success\":\"success___3hl98\",\"warning\":\"warning___2i2r2\",\"error\":\"error___3JfQo\",\"progress-pass\":\"progress-pass___BM1Xu\",\"progress\":\"progress___2s68u\"};","import type { FC } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Form, Button, Col, Input, Popover, Progress, Row, Select, message } from 'antd';\nimport type { Store } from 'antd/es/form/interface';\nimport { useRequest } from 'umi';\nimport type { StateType } from './service';\nimport { fakeRegister } from './service';\nimport { useIntl, Link, history, SelectLang } from 'umi';\nimport styles from './style.less';\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\nconst InputGroup = Input.Group;\n\nconst passwordStatusMap = {\n  ok: (\n    <div className={styles.success}>\n      <span>强度：强</span>\n    </div>\n  ),\n  pass: (\n    <div className={styles.warning}>\n      <span>强度：中</span>\n    </div>\n  ),\n  poor: (\n    <div className={styles.error}>\n      <span>强度：太短</span>\n    </div>\n  ),\n};\n\nconst passwordProgressMap: {\n  ok: 'success';\n  pass: 'normal';\n  poor: 'exception';\n} = {\n  ok: 'success',\n  pass: 'normal',\n  poor: 'exception',\n};\n\nconst Register: FC = () => {\n  const [count, setCount]: [number, any] = useState(0);\n  const [visible, setVisible]: [boolean, any] = useState(false);\n  const [prefix, setPrefix]: [string, any] = useState('86');\n  const [popover, setPopover]: [boolean, any] = useState(false);\n  const confirmDirty = false;\n  let interval: number | undefined;\n  const [form] = Form.useForm();\n  const intl = useIntl();\n  useEffect(\n    () => () => {\n      clearInterval(interval);\n    },\n    [interval],\n  );\n\n  const onGetCaptcha = () => {\n    let counts = 59;\n    setCount(counts);\n    interval = window.setInterval(() => {\n      counts -= 1;\n      setCount(counts);\n      if (counts === 0) {\n        clearInterval(interval);\n      }\n    }, 1000);\n  };\n\n  const getPasswordStatus = () => {\n    const value = form.getFieldValue('password');\n    if (value && value.length > 9) {\n      return 'success';\n    }\n    if (value && value.length > 5) {\n      return 'pass';\n    }\n    return 'poor';\n  };\n\n  const { loading: submitting, run: register } = useRequest<{ data: StateType }>(fakeRegister, {\n    manual: true,\n    onSuccess: (data, params) => {\n      if (data.status === 'success') {\n        message.success('注册成功！');\n        history.push({\n          pathname: '/user/register-result',\n          state: {\n            account: params.email,\n          },\n        });\n      }\n    },\n  });\n  const onFinish = (values: Store) => {\n    register(values);\n  };\n\n  const checkConfirm = (_: any, value: string) => {\n    const promise = Promise;\n    if (value && value !== form.getFieldValue('password')) {\n      return promise.reject('两次输入的密码不匹配!');\n    }\n    return promise.resolve();\n  };\n\n  const checkPassword = (_: any, value: string) => {\n    const promise = Promise;\n    // 没有值的情况\n    if (!value) {\n      setVisible(!!value);\n      return promise.reject('请输入密码!');\n    }\n    // 有值的情况\n    if (!visible) {\n      setVisible(!!value);\n    }\n    setPopover(!popover);\n    if (value.length < 6) {\n      return promise.reject('');\n    }\n    if (value && confirmDirty) {\n      form.validateFields(['confirm']);\n    }\n    return promise.resolve();\n  };\n\n  const changePrefix = (value: string) => {\n    setPrefix(value);\n  };\n\n  const renderPasswordProgress = () => {\n    const value = form.getFieldValue('password');\n    const passwordStatus = getPasswordStatus();\n    return value && value.length ? (\n      <div className={styles[`progress-${passwordStatus}`]}>\n        <Progress\n          status={passwordProgressMap[passwordStatus]}\n          className={styles.progress}\n          strokeWidth={6}\n          percent={value.length * 10 > 100 ? 100 : value.length * 10}\n          showInfo={false}\n        />\n      </div>\n    ) : null;\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.lang} data-lang>\n        {SelectLang && <SelectLang />}\n      </div>\n      <div className={styles.content}>\n        <div className={styles.top}>\n          <div className={styles.header}>\n            <Link to=\"/user/register-result\">\n              <img\n                alt=\"logo\"\n                onClick={() =>\n                  (localStorage.antdprourl = 'https://zhoubichuan.com/antdpro-express')\n                }\n                className={styles.logo}\n                src=\"/antdpro-demo/logo.svg\"\n              />\n              <span className={styles.title}>数据管理系统</span>\n            </Link>\n          </div>\n          <div className={styles.desc}>\n            {intl.formatMessage({ id: 'pages.layouts.userLayout.title' })}\n          </div>\n        </div>\n        <div className={styles.main}>\n          <h3>注册</h3>\n          <Form form={form} name=\"UserRegister\" onFinish={onFinish}>\n            <FormItem\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入邮箱地址!',\n                },\n                {\n                  type: 'email',\n                  message: '邮箱地址格式错误!',\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"邮箱\" />\n            </FormItem>\n            <FormItem\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入用户名',\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"用户名\" />\n            </FormItem>\n            <Popover\n              getPopupContainer={(node) => {\n                if (node && node.parentNode) {\n                  return node.parentNode as HTMLElement;\n                }\n                return node;\n              }}\n              content={\n                visible && (\n                  <div style={{ padding: '4px 0' }}>\n                    {passwordStatusMap[getPasswordStatus()]}\n                    {renderPasswordProgress()}\n                    <div style={{ marginTop: 10 }}>\n                      <span>请至少输入 6 个字符。请不要使用容易被猜到的密码。</span>\n                    </div>\n                  </div>\n                )\n              }\n              overlayStyle={{ width: 240 }}\n              placement=\"right\"\n              visible={visible}\n            >\n              <FormItem\n                name=\"password\"\n                className={\n                  form.getFieldValue('password') &&\n                  form.getFieldValue('password').length > 0 &&\n                  styles.password\n                }\n                rules={[\n                  {\n                    validator: checkPassword,\n                  },\n                ]}\n              >\n                <Input size=\"large\" type=\"password\" placeholder=\"至少6位密码，区分大小写\" />\n              </FormItem>\n            </Popover>\n            <FormItem\n              name=\"confirm\"\n              rules={[\n                {\n                  required: true,\n                  message: '确认密码',\n                },\n                {\n                  validator: checkConfirm,\n                },\n              ]}\n            >\n              <Input size=\"large\" type=\"password\" placeholder=\"确认密码\" />\n            </FormItem>\n            <InputGroup compact>\n              <Select size=\"large\" value={prefix} onChange={changePrefix} style={{ width: '20%' }}>\n                <Option value=\"86\">+86</Option>\n                <Option value=\"87\">+87</Option>\n              </Select>\n              <FormItem\n                style={{ width: '80%' }}\n                name=\"mobile\"\n                rules={[\n                  {\n                    required: true,\n                    message: '请输入手机号!',\n                  },\n                  {\n                    pattern: /^\\d{11}$/,\n                    message: '手机号格式错误!',\n                  },\n                ]}\n              >\n                <Input size=\"large\" placeholder=\"手机号\" />\n              </FormItem>\n            </InputGroup>\n            <Row gutter={8}>\n              <Col span={16}>\n                <FormItem\n                  name=\"captcha\"\n                  rules={[\n                    {\n                      required: true,\n                      message: '请输入验证码!',\n                    },\n                  ]}\n                >\n                  <Input size=\"large\" placeholder=\"验证码\" />\n                </FormItem>\n              </Col>\n              <Col span={8}>\n                <Button\n                  size=\"large\"\n                  disabled={!!count}\n                  className={styles.getCaptcha}\n                  onClick={onGetCaptcha}\n                >\n                  {count ? `${count} s` : '获取验证码'}\n                </Button>\n              </Col>\n            </Row>\n            <FormItem>\n              <Button\n                size=\"large\"\n                loading={submitting}\n                className={styles.submit}\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                <span>注册</span>\n              </Button>\n              <Link className={styles.login} to=\"/user/login\">\n                <span>使用已有账户登录</span>\n              </Link>\n            </FormItem>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Register;\n"],"sourceRoot":""}