{"version":3,"sources":["webpack://ant-design-pro/./src/pages/list/card-list/style.less","webpack://ant-design-pro/./src/pages/list/card-list/index.tsx","webpack://ant-design-pro/./src/pages/list/list/SliderPart.tsx","webpack://ant-design-pro/./src/pages/list/search/service.ts","webpack://ant-design-pro/./node_modules/antd/es/_util/ActionButton.js","webpack://ant-design-pro/./node_modules/antd/es/table/hooks/useLazyKVMap.js"],"names":["Paragraph","CardList","useState","currentRow","setCurrentRow","templateData","setTemplateData","showDetail","setShowDetail","useRequest","queryFakeList","current","pageSize","data","loading","list","nullData","viewDetail","name","template","getTemplate","result","data2","listRequest","author","result2","i","item","Object","keys","forEach","field","includes","JSON","parse","length","classNames","styles","gutter","xs","sm","md","lg","xl","xxl","id","images","rows","descript","undefined","SliderPart","props","onClose","descriptions","filter","stringify","view","map","width","ellipsis","rest","render","text","type","Array","isArray","objectFit","maxHeight","display","whiteSpace","moment","fromNow","d","key","request","method","params","url","options","location","pathname","replace"],"mappings":"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","file":"p__list__card-list.a6b6bccd.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pro-container\":\"pro-container___1-_jv\",\"cardList\":\"cardList___3xaWz\",\"card\":\"card___2UcUB\",\"item\":\"item___12yPk\",\"extraImg\":\"extraImg___1s7Yr\",\"newButton\":\"newButton___d7XLd\",\"cardAvatar\":\"cardAvatar___1IXn2\",\"cardDescription\":\"cardDescription___2El4K\",\"pageHeaderContent\":\"pageHeaderContent___1gL3o\",\"contentLink\":\"contentLink___2_3KH\"};","import { PlusOutlined } from '@ant-design/icons';\nimport { Button, Card, List, Typography } from 'antd';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport { useRequest } from 'umi';\nimport { queryFakeList } from './service';\nimport type { CardListItemDataType } from './data.d';\nimport styles from './style.less';\nimport classNames from 'classnames';\nimport type { TableListItem } from './data';\nimport { useState } from 'react';\nimport { list as listRequest, getTemplate } from '../search/service';\nimport SliderPart from '../list/SliderPart';\nconst { Paragraph } = Typography;\n\nconst CardList = () => {\n  const [currentRow, setCurrentRow] = useState<TableListItem>();\n  const [templateData, setTemplateData] = useState<any>([]);\n  const [showDetail, setShowDetail] = useState<boolean>(false);\n  const { data, loading } = useRequest(() => {\n    return queryFakeList({\n      current: 1,\n      pageSize: 10,\n    });\n  });\n  const list: any = data || [];\n  const nullData: Partial<CardListItemDataType> = {};\n  const viewDetail = async (name: any) => {\n    let template: any = [];\n    const result = await getTemplate('1', 'data');\n    template = result.data;\n    let data2: any = [];\n    const result2 = await listRequest('data/1', {}, { author: name });\n    data2 = result2.data;\n    setCurrentRow(data2);\n    for (let i = 0; i < template.length; i++) {\n      const item = template[i];\n      Object.keys(item).forEach((field: any) => {\n        if (typeof item[field] === 'string') {\n          if (item[field].includes('{}')) {\n            template[i][field] = false;\n          } else if (item[field].includes('{')) {\n            template[i][field] = JSON.parse(item[field]);\n          }\n        }\n      });\n    }\n    setTemplateData(template);\n    setShowDetail(true);\n  };\n  return (\n    <PageContainer className={classNames('pro-container', styles['pro-container'])}>\n      <div className={styles.cardList}>\n        <List<Partial<CardListItemDataType>>\n          rowKey=\"id\"\n          loading={loading}\n          grid={{\n            gutter: 16,\n            xs: 1,\n            sm: 2,\n            md: 3,\n            lg: 3,\n            xl: 4,\n            xxl: 4,\n          }}\n          dataSource={[nullData, ...list]}\n          renderItem={(item) => {\n            if (item && item.id) {\n              return (\n                <List.Item key={item.id}>\n                  <Card\n                    hoverable\n                    className={styles.card}\n                    actions={[\n                      <a key=\"option1\">编辑</a>,\n                      <a key=\"option2\" onClick={() => viewDetail(item.name)}>\n                        查看详情\n                      </a>,\n                    ]}\n                  >\n                    <Card.Meta\n                      avatar={<img alt=\"\" className={styles.cardAvatar} src={item.images[0]} />}\n                      title={<a>{item.name}</a>}\n                      description={\n                        <Paragraph className={styles.item} ellipsis={{ rows: 3 }}>\n                          {item.descript}\n                        </Paragraph>\n                      }\n                    />\n                  </Card>\n                </List.Item>\n              );\n            }\n            return (\n              <List.Item>\n                <Button type=\"dashed\" className={styles.newButton}>\n                  <PlusOutlined /> 新增产品\n                </Button>\n              </List.Item>\n            );\n          }}\n        />\n      </div>\n      {showDetail && templateData && (\n        <SliderPart\n          template={templateData}\n          data={currentRow}\n          onClose={() => {\n            setCurrentRow(undefined);\n            setShowDetail(false);\n          }}\n        />\n      )}\n    </PageContainer>\n  );\n};\n\nexport default CardList;\n","import type { ProDescriptionsItemProps } from '@ant-design/pro-descriptions';\nimport ProDescriptions from '@ant-design/pro-descriptions';\nimport { Drawer } from 'antd';\nimport React from 'react';\nimport { CloseOutlined } from '@ant-design/icons';\nimport type { ProColumns } from '@ant-design/pro-table';\nimport { Image } from 'antd';\nimport moment from 'moment';\nimport type { TableListItem } from './data';\nexport type SliderPartProps = {\n  onClose?: (e?: any) => void;\n  data: any;\n  template: any;\n};\nconst SliderPart: React.FC<SliderPartProps> = (props) => {\n  const { data, template = [], onClose } = props;\n  const descriptions: ProColumns<TableListItem>[] = template\n    .filter((item: any) => JSON.stringify(item.view) !== '{}')\n    .map((item: any) => {\n      const { width, view, ellipsis, ...rest } = item;\n      return {\n        ...rest,\n        render: (text: any) => {\n          if (item.view && item.view.type === 'image') {\n            if (Array.isArray(text)) {\n              return text.map((i: any) => {\n                if (i.includes('.mp4')) {\n                  return (\n                    <video\n                      controls\n                      style={{ objectFit: 'contain', maxHeight: '300px', display: 'inline-block' }}\n                    >\n                      <source src={i} type=\"video/mp4\" />\n                    </video>\n                  );\n                } else {\n                  return <Image style={{ objectFit: 'contain', maxHeight: '300px' }} src={i} />;\n                }\n              });\n            } else {\n              if (text.includes('.mp4')) {\n                return <video style={{ objectFit: 'contain', maxHeight: '300px' }} src={text} />;\n              } else {\n                return <Image style={{ objectFit: 'contain', maxHeight: '300px' }} src={text} />;\n              }\n            }\n          }\n          if (item.view && item.view.type === 'video') {\n            if (Array.isArray(text)) {\n              return text.map((i: any) => <video height={300} src={i} />);\n            } else {\n              return <video height={300} src={text} />;\n            }\n          }\n          if (item.view && item.view.type === 'time') {\n            return <div style={{ whiteSpace: 'pre-line' }}>{moment(text).fromNow()}</div>;\n          }\n          return (\n            <div style={{ whiteSpace: 'pre-line' }}>\n              {typeof text === 'string' ? text : JSON.stringify(text)}\n            </div>\n          );\n        },\n      };\n    });\n\n  return (\n    <Drawer\n      title={data[0]?.id}\n      destroyOnClose\n      closable={true}\n      closeIcon={<CloseOutlined />}\n      width={'80%'}\n      open={true}\n      onClose={onClose}\n    >\n      {Array.isArray(data) &&\n        data.map((d) => (\n          <ProDescriptions<TableListItem>\n            column={2}\n            request={async () => ({\n              data: d || {},\n            })}\n            params={{\n              id: d?.id,\n            }}\n            columns={descriptions as ProDescriptionsItemProps<TableListItem>[]}\n          />\n        ))}\n    </Drawer>\n  );\n};\n\nexport default SliderPart;\n","// @ts-ignore\n/* eslint-disable */\nimport { request } from 'umi';\nimport { TableListItem } from './data';\nexport async function getTemplate(key: string, type: string) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/template/' + key, {\n    method: 'GET',\n    params: {\n      current: '1',\n      pageSize: '20',\n      type: type,\n    },\n  });\n}\nexport async function list(\n  url: string,\n  params: {\n    current?: number;\n    pageSize?: number;\n  },\n  options?: { [key: string]: any },\n) {\n  return request<{\n    data: TableListItem[];\n    total?: number;\n    success?: boolean;\n  }>('/api/list/' + url, {\n    method: 'GET',\n    params: {\n      ...params,\n      ...(options || {}),\n    },\n  });\n}\n\nexport async function updateList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'PUT',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function addList(options?: { [key: string]: any }) {\n  return request<TableListItem>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'POST',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function removeList(options?: { [key: string]: any }) {\n  return request<Record<string, any>>('/api' + location.pathname.replace('/antdpro-demo', ''), {\n    method: 'DELETE',\n    data: { ...(options || {}) },\n  });\n}\n\nexport async function exportList(options?: { [key: string]: any }) {\n  return request<TableListItem>(\n    '/api' + location.pathname.replace('/antdpro-demo', '') + '/export',\n    {\n      method: 'POST',\n      data: options,\n    },\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useState from \"rc-util/es/hooks/useState\";\nimport * as React from 'react';\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/button';\nfunction isThenable(thing) {\n  return !!(thing && !!thing.then);\n}\nvar ActionButton = function ActionButton(props) {\n  var clickedRef = React.useRef(false);\n  var ref = React.useRef(null);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var close = props.close;\n  var onInternalClose = function onInternalClose() {\n    close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n  };\n  React.useEffect(function () {\n    var timeoutId = null;\n    if (props.autoFocus) {\n      timeoutId = setTimeout(function () {\n        var _a;\n        (_a = ref.current) === null || _a === void 0 ? void 0 : _a.focus();\n      });\n    }\n    return function () {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, []);\n  var handlePromiseOnOk = function handlePromiseOnOk(returnValueOfOnOk) {\n    if (!isThenable(returnValueOfOnOk)) {\n      return;\n    }\n    setLoading(true);\n    returnValueOfOnOk.then(function () {\n      setLoading(false, true);\n      onInternalClose.apply(void 0, arguments);\n      clickedRef.current = false;\n    }, function (e) {\n      // See: https://github.com/ant-design/ant-design/issues/6183\n      setLoading(false, true);\n      clickedRef.current = false;\n      return Promise.reject(e);\n    });\n  };\n  var onClick = function onClick(e) {\n    var actionFn = props.actionFn;\n    if (clickedRef.current) {\n      return;\n    }\n    clickedRef.current = true;\n    if (!actionFn) {\n      onInternalClose();\n      return;\n    }\n    var returnValueOfOnOk;\n    if (props.emitEvent) {\n      returnValueOfOnOk = actionFn(e);\n      if (props.quitOnNullishReturnValue && !isThenable(returnValueOfOnOk)) {\n        clickedRef.current = false;\n        onInternalClose(e);\n        return;\n      }\n    } else if (actionFn.length) {\n      returnValueOfOnOk = actionFn(close);\n      // https://github.com/ant-design/ant-design/issues/23358\n      clickedRef.current = false;\n    } else {\n      returnValueOfOnOk = actionFn();\n      if (!returnValueOfOnOk) {\n        onInternalClose();\n        return;\n      }\n    }\n    handlePromiseOnOk(returnValueOfOnOk);\n  };\n  var type = props.type,\n    children = props.children,\n    prefixCls = props.prefixCls,\n    buttonProps = props.buttonProps;\n  return /*#__PURE__*/React.createElement(Button, _extends({}, convertLegacyProps(type), {\n    onClick: onClick,\n    loading: loading,\n    prefixCls: prefixCls\n  }, buttonProps, {\n    ref: ref\n  }), children);\n};\nexport default ActionButton;","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nexport default function useLazyKVMap(data, childrenColumnName, getRowKey) {\n  var mapCacheRef = React.useRef({});\n  function getRecordByKey(key) {\n    if (!mapCacheRef.current || mapCacheRef.current.data !== data || mapCacheRef.current.childrenColumnName !== childrenColumnName || mapCacheRef.current.getRowKey !== getRowKey) {\n      var kvMap = new Map();\n      /* eslint-disable no-inner-declarations */\n      function dig(records) {\n        records.forEach(function (record, index) {\n          var rowKey = getRowKey(record, index);\n          kvMap.set(rowKey, record);\n          if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n            dig(record[childrenColumnName] || []);\n          }\n        });\n      }\n      /* eslint-enable */\n      dig(data);\n      mapCacheRef.current = {\n        data: data,\n        childrenColumnName: childrenColumnName,\n        kvMap: kvMap,\n        getRowKey: getRowKey\n      };\n    }\n    return mapCacheRef.current.kvMap.get(key);\n  }\n  return [getRecordByKey];\n}"],"sourceRoot":""}