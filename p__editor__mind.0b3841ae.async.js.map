{"version":3,"sources":["webpack://ant-design-pro/./src/pages/editor/mind/components/EditorContextMenu/index.less","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorDetailPanel/index.less","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorToolbar/index.less","webpack://ant-design-pro/./src/pages/editor/mind/index.less","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorMinimap/index.tsx","webpack://ant-design-pro/./src/pages/editor/mind/common/IconFont/index.ts","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorContextMenu/MenuItem.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorContextMenu/FlowContextMenu.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorContextMenu/KoniContextMenu.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorContextMenu/MindContextMenu.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorDetailPanel/DetailForm.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorDetailPanel/FlowDetailPanel.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorDetailPanel/KoniDetailPanel.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorDetailPanel/MindDetailPanel.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorToolbar/ToolbarButton.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorToolbar/FlowToolbar.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorToolbar/KoniToolbar.tsx","webpack://ant-design-pro/./src/pages/editor/mind/components/EditorToolbar/MindToolbar.tsx","webpack://ant-design-pro/./src/pages/editor/mind/index.tsx"],"names":["EditorMinimap","IconFont","createFromIconfontCN","scriptUrl","upperFirst","str","toLowerCase","replace","l","toUpperCase","MenuItem","props","command","icon","text","styles","FlowContextMenu","contextMenu","MindContextMenu","Item","Option","inlineFormItemLayout","labelCol","sm","span","wrapperCol","DetailForm","handleFieldChange","values","propsAPI","getSelected","executeCommand","update","setTimeout","item","handleInputBlur","type","e","preventDefault","currentTarget","value","renderNodeDetail","getModel","label","renderEdgeDetail","shape","renderGroupDetail","React","withPropsAPI","FlowDetailPanel","detailPanel","MindDetailPanel","ToolbarButton","FlowToolbar","toolbar","GGEditor","data"],"mappings":"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","file":"p__editor__mind.0b3841ae.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenu\":\"contextMenu___2Ldny\",\"item\":\"item___2U3l4\",\"anticon\":\"anticon___WnJdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailPanel\":\"detailPanel___3kol4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"toolbar___jRwEG\",\"tooltip\":\"tooltip___zrnM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"editor___r7h9L\",\"editorHd\":\"editorHd___3iKCK\",\"editorBd\":\"editorBd___2uvHY\",\"editorSidebar\":\"editorSidebar___20Ugh\",\"editorContent\":\"editorContent___396_U\",\"flow\":\"flow___3dG9B\",\"mind\":\"mind___3O6LN\",\"koni\":\"koni___QYt1u\"};","import { Card } from 'antd';\nimport { Minimap } from 'gg-editor';\n\nconst EditorMinimap = () => (\n  <Card type=\"inner\" size=\"small\" title=\"Minimap\" bordered={false}>\n    <Minimap height={200} />\n  </Card>\n);\n\nexport default EditorMinimap;\n","import { createFromIconfontCN } from '@ant-design/icons';\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: 'https://at.alicdn.com/t/font_1101588_01zniftxm9yp.js',\n});\n\nexport default IconFont;\n","import { Command } from 'gg-editor';\nimport React from 'react';\nimport IconFont from '../../common/IconFont';\nimport styles from './index.less';\n\nconst upperFirst = (str: string) =>\n  str.toLowerCase().replace(/( |^)[a-z]/g, (l: string) => l.toUpperCase());\n\ntype MenuItemProps = {\n  command: string;\n  icon?: string;\n  text?: string;\n};\nconst MenuItem: React.FC<MenuItemProps> = (props) => {\n  const { command, icon, text } = props;\n\n  return (\n    <Command name={command}>\n      <div className={styles.item}>\n        <IconFont type={`icon-${icon || command}`} />\n        <span>{text || upperFirst(command)}</span>\n      </div>\n    </Command>\n  );\n};\n\nexport default MenuItem;\n","import { CanvasMenu, ContextMenu, EdgeMenu, GroupMenu, MultiMenu, NodeMenu } from 'gg-editor';\nimport MenuItem from './MenuItem';\nimport styles from './index.less';\n\nconst FlowContextMenu = () => (\n  <ContextMenu className={styles.contextMenu}>\n    <NodeMenu>\n      <MenuItem command=\"copy\" />\n      <MenuItem command=\"delete\" />\n    </NodeMenu>\n    <EdgeMenu>\n      <MenuItem command=\"delete\" />\n    </EdgeMenu>\n    <GroupMenu>\n      <MenuItem command=\"copy\" />\n      <MenuItem command=\"delete\" />\n      <MenuItem command=\"unGroup\" icon=\"ungroup\" text=\"Ungroup\" />\n    </GroupMenu>\n    <MultiMenu>\n      <MenuItem command=\"copy\" />\n      <MenuItem command=\"paste\" />\n      <MenuItem command=\"addGroup\" icon=\"group\" text=\"Add Group\" />\n      <MenuItem command=\"delete\" />\n    </MultiMenu>\n    <CanvasMenu>\n      <MenuItem command=\"undo\" />\n      <MenuItem command=\"redo\" />\n      <MenuItem command=\"pasteHere\" icon=\"paste\" text=\"Paste Here\" />\n    </CanvasMenu>\n  </ContextMenu>\n);\n\nexport default FlowContextMenu;\n","import FlowContextMenu from './FlowContextMenu';\n\nexport default FlowContextMenu;\n","import { CanvasMenu, ContextMenu, NodeMenu } from 'gg-editor';\n\nimport MenuItem from './MenuItem';\nimport styles from './index.less';\n\nconst MindContextMenu = () => (\n  <ContextMenu className={styles.contextMenu}>\n    <NodeMenu>\n      <MenuItem command=\"append\" text=\"Topic\" />\n      <MenuItem command=\"appendChild\" icon=\"append-child\" text=\"Subtopic\" />\n      <MenuItem command=\"collapse\" text=\"Fold\" />\n      <MenuItem command=\"expand\" text=\"Unfold\" />\n      <MenuItem command=\"delete\" />\n    </NodeMenu>\n    <CanvasMenu>\n      <MenuItem command=\"undo\" />\n      <MenuItem command=\"redo\" />\n    </CanvasMenu>\n  </ContextMenu>\n);\n\nexport default MindContextMenu;\n","import React from 'react';\nimport { Card, Input, Select, Form } from 'antd';\nimport { withPropsAPI } from 'gg-editor';\n\nconst upperFirst = (str: string) =>\n  str.toLowerCase().replace(/( |^)[a-z]/g, (l: string) => l.toUpperCase());\n\nconst { Item } = Form;\nconst { Option } = Select;\n\nconst inlineFormItemLayout = {\n  labelCol: {\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    sm: { span: 16 },\n  },\n};\n\ntype DetailFormProps = {\n  type: string;\n  propsAPI?: any;\n};\n\nclass DetailForm extends React.Component<DetailFormProps> {\n  get item() {\n    const { propsAPI } = this.props;\n    return propsAPI.getSelected()[0];\n  }\n\n  handleFieldChange = (values: any) => {\n    const { propsAPI } = this.props;\n    const { getSelected, executeCommand, update } = propsAPI;\n\n    setTimeout(() => {\n      const item = getSelected()[0];\n      if (!item) {\n        return;\n      }\n      executeCommand(() => {\n        update(item, {\n          ...values,\n        });\n      });\n    }, 0);\n  };\n\n  handleInputBlur = (type: string) => (e: React.FormEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    this.handleFieldChange({\n      [type]: e.currentTarget.value,\n    });\n  };\n\n  renderNodeDetail = () => {\n    const { label } = this.item.getModel();\n\n    return (\n      <Form initialValues={{ label }}>\n        <Item label=\"Label\" name=\"label\" {...inlineFormItemLayout}>\n          <Input onBlur={this.handleInputBlur('label')} />\n        </Item>\n      </Form>\n    );\n  };\n\n  renderEdgeDetail = () => {\n    const { label = '', shape = 'flow-smooth' } = this.item.getModel();\n\n    return (\n      <Form initialValues={{ label, shape }}>\n        <Item label=\"Label\" name=\"label\" {...inlineFormItemLayout}>\n          <Input onBlur={this.handleInputBlur('label')} />\n        </Item>\n        <Item label=\"Shape\" name=\"shape\" {...inlineFormItemLayout}>\n          <Select onChange={(value) => this.handleFieldChange({ shape: value })}>\n            <Option value=\"flow-smooth\">Smooth</Option>\n            <Option value=\"flow-polyline\">Polyline</Option>\n            <Option value=\"flow-polyline-round\">Polyline Round</Option>\n          </Select>\n        </Item>\n      </Form>\n    );\n  };\n\n  renderGroupDetail = () => {\n    const { label = '新建分组' } = this.item.getModel();\n\n    return (\n      <Form initialValues={{ label }}>\n        <Item label=\"Label\" name=\"label\" {...inlineFormItemLayout}>\n          <Input onBlur={this.handleInputBlur('label')} />\n        </Item>\n      </Form>\n    );\n  };\n\n  render() {\n    const { type } = this.props;\n    if (!this.item) {\n      return null;\n    }\n\n    return (\n      <Card type=\"inner\" size=\"small\" title={upperFirst(type)} bordered={false}>\n        {type === 'node' && this.renderNodeDetail()}\n        {type === 'edge' && this.renderEdgeDetail()}\n        {type === 'group' && this.renderGroupDetail()}\n      </Card>\n    );\n  }\n}\n\nexport default withPropsAPI(DetailForm as any);\n","import { CanvasPanel, DetailPanel, EdgePanel, GroupPanel, MultiPanel, NodePanel } from 'gg-editor';\n\nimport { Card } from 'antd';\nimport DetailForm from './DetailForm';\nimport styles from './index.less';\n\nconst FlowDetailPanel = () => (\n  <DetailPanel className={styles.detailPanel}>\n    <NodePanel>\n      <DetailForm type=\"node\" />\n    </NodePanel>\n    <EdgePanel>\n      <DetailForm type=\"edge\" />\n    </EdgePanel>\n    <GroupPanel>\n      <DetailForm type=\"group\" />\n    </GroupPanel>\n    <MultiPanel>\n      <Card type=\"inner\" size=\"small\" title=\"Multi Select\" bordered={false} />\n    </MultiPanel>\n    <CanvasPanel>\n      <Card type=\"inner\" size=\"small\" title=\"Canvas\" bordered={false} />\n    </CanvasPanel>\n  </DetailPanel>\n);\n\nexport default FlowDetailPanel;\n","import FlowDetailPanel from './FlowDetailPanel';\n\nexport default FlowDetailPanel;\n","import { CanvasPanel, DetailPanel, NodePanel } from 'gg-editor';\n\nimport { Card } from 'antd';\nimport DetailForm from './DetailForm';\nimport styles from './index.less';\n\nconst MindDetailPanel = () => (\n  <DetailPanel className={styles.detailPanel}>\n    <NodePanel>\n      <DetailForm type=\"node\" />\n    </NodePanel>\n    <CanvasPanel>\n      <Card type=\"inner\" size=\"small\" title=\"Canvas\" bordered={false} />\n    </CanvasPanel>\n  </DetailPanel>\n);\n\nexport default MindDetailPanel;\n","import { Command } from 'gg-editor';\nimport React from 'react';\nimport { Tooltip } from 'antd';\nimport IconFont from '../../common/IconFont';\nimport styles from './index.less';\n\nconst upperFirst = (str: string) =>\n  str.toLowerCase().replace(/( |^)[a-z]/g, (l: string) => l.toUpperCase());\n\ntype ToolbarButtonProps = {\n  command: string;\n  icon?: string;\n  text?: string;\n};\nconst ToolbarButton: React.FC<ToolbarButtonProps> = (props) => {\n  const { command, icon, text } = props;\n\n  return (\n    <Command name={command}>\n      <Tooltip\n        title={text || upperFirst(command)}\n        placement=\"bottom\"\n        overlayClassName={styles.tooltip}\n      >\n        <IconFont type={`icon-${icon || command}`} />\n      </Tooltip>\n    </Command>\n  );\n};\n\nexport default ToolbarButton;\n","import { Divider } from 'antd';\nimport { Toolbar } from 'gg-editor';\nimport ToolbarButton from './ToolbarButton';\nimport styles from './index.less';\n\nconst FlowToolbar = () => (\n  <Toolbar className={styles.toolbar}>\n    <ToolbarButton command=\"undo\" />\n    <ToolbarButton command=\"redo\" />\n    <Divider type=\"vertical\" />\n    <ToolbarButton command=\"copy\" />\n    <ToolbarButton command=\"paste\" />\n    <ToolbarButton command=\"delete\" />\n    <Divider type=\"vertical\" />\n    <ToolbarButton command=\"zoomIn\" icon=\"zoom-in\" text=\"Zoom In\" />\n    <ToolbarButton command=\"zoomOut\" icon=\"zoom-out\" text=\"Zoom Out\" />\n    <ToolbarButton command=\"autoZoom\" icon=\"fit-map\" text=\"Fit Map\" />\n    <ToolbarButton command=\"resetZoom\" icon=\"actual-size\" text=\"Actual Size\" />\n    <Divider type=\"vertical\" />\n    <ToolbarButton command=\"toBack\" icon=\"to-back\" text=\"To Back\" />\n    <ToolbarButton command=\"toFront\" icon=\"to-front\" text=\"To Front\" />\n    <Divider type=\"vertical\" />\n    <ToolbarButton command=\"multiSelect\" icon=\"multi-select\" text=\"Multi Select\" />\n    <ToolbarButton command=\"addGroup\" icon=\"group\" text=\"Add Group\" />\n    <ToolbarButton command=\"unGroup\" icon=\"ungroup\" text=\"Ungroup\" />\n  </Toolbar>\n);\n\nexport default FlowToolbar;\n","import FlowToolbar from './FlowToolbar';\n\nexport default FlowToolbar;\n","import { Divider } from 'antd';\nimport { Toolbar } from 'gg-editor';\nimport ToolbarButton from './ToolbarButton';\nimport styles from './index.less';\n\nconst FlowToolbar = () => (\n  <Toolbar className={styles.toolbar}>\n    <ToolbarButton command=\"undo\" />\n    <ToolbarButton command=\"redo\" />\n    <Divider type=\"vertical\" />\n    <ToolbarButton command=\"zoomIn\" icon=\"zoom-in\" text=\"Zoom In\" />\n    <ToolbarButton command=\"zoomOut\" icon=\"zoom-out\" text=\"Zoom Out\" />\n    <ToolbarButton command=\"autoZoom\" icon=\"fit-map\" text=\"Fit Map\" />\n    <ToolbarButton command=\"resetZoom\" icon=\"actual-size\" text=\"Actual Size\" />\n    <Divider type=\"vertical\" />\n    <ToolbarButton command=\"append\" text=\"Topic\" />\n    <ToolbarButton command=\"appendChild\" icon=\"append-child\" text=\"Subtopic\" />\n    <Divider type=\"vertical\" />\n    <ToolbarButton command=\"collapse\" text=\"Fold\" />\n    <ToolbarButton command=\"expand\" text=\"Unfold\" />\n  </Toolbar>\n);\n\nexport default FlowToolbar;\n","import { Col, Row } from 'antd';\nimport GGEditor, { Mind } from 'gg-editor';\n\nimport { PageContainer } from '@ant-design/pro-layout';\nimport EditorMinimap from './components/EditorMinimap';\nimport { MindContextMenu } from './components/EditorContextMenu';\nimport { MindDetailPanel } from './components/EditorDetailPanel';\nimport { MindToolbar } from './components/EditorToolbar';\nimport data from './worldCup2018.json';\nimport styles from './index.less';\n\nGGEditor.setTrackable(false);\n\nexport default () => (\n  <PageContainer content=\"脑图是表达发散性思维的有效图形思维工具 ，它简单却又很有效，是一种实用性的思维工具\">\n    <GGEditor className={styles.editor}>\n      <Row className={styles.editorHd}>\n        <Col span={24}>\n          <MindToolbar />\n        </Col>\n      </Row>\n      <Row className={styles.editorBd}>\n        <Col span={20} className={styles.editorContent}>\n          <Mind data={data} className={styles.mind} />\n        </Col>\n        <Col span={4} className={styles.editorSidebar}>\n          <MindDetailPanel />\n          <EditorMinimap />\n        </Col>\n      </Row>\n      <MindContextMenu />\n    </GGEditor>\n  </PageContainer>\n);\n"],"sourceRoot":""}